&НаКлиенте
Процедура НастройкиЗапросовПриАктивизацииСтроки(Элемент)
	Если Объект.НастройкиЗапросов.Количество() > 0 Тогда
		ТекущаяСтрока = Элементы.НастройкиЗапросов.ТекущиеДанные;
		ТекущийНомерНастройки = ТекущаяСтрока.НомерСтроки;
		ЗаполнитьЗначенияСвойств(Объект, ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипБазыПриИзменении(Элемент)
	Если Объект.ТипБазы = "ClickHouseDB" Тогда
		Объект.Порт = 8123;
	ИначеЕсли Объект.ТипБазы = "PostgreSQL" Тогда
		Объект.Порт = 5432;
	ИначеЕсли Объект.ТипБазы = "MySQL" Тогда
		Объект.Порт = 3306;
	Иначе
		Объект.Порт = 8123;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьЖурналРегистрацииВClickHouseНаСервере(СтруктураПараметрыФормы)
	ПараметрыОбработки = ПолучитьИЗаполнитьПараметрыОбработки(СтруктураПараметрыФормы);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОтправитьЖурналРегистрацииВClickHouse(ПараметрыОбработки);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЖурналРегистрацииВClickHouse(Команда)
	ОтправитьЖурналРегистрацииВClickHouseНаСервере(ЗаполнитьСтруктуруПараметровИзФормы("КомандаПример"));
КонецПроцедуры

&НаСервере
Функция ПолучитьИЗаполнитьПараметрыОбработки(СтруктураПараметрыФормы)
	ПараметрыОбработки = ПолучитьСтруктуруПараметров();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	МДОбъекта = ОбработкаОбъект.Метаданные();
	Для Каждого ТекРеквизит Из МДОбъекта.Реквизиты Цикл
		ПараметрыОбработки.Вставить(ТекРеквизит.Имя, ОбработкаОбъект[ТекРеквизит.Имя]);
	КонецЦикла;
	//
	Для каждого Элемент из СтруктураПараметрыФормы Цикл
		ПараметрыОбработки.Вставить(Элемент.Ключ, Элемент.Значение);	
	КонецЦикла;
	//
	ПараметрыОбработки.Вставить("ДатаНачала", Объект.ДатаНачала);
	ПараметрыОбработки.Вставить("ДатаОкончания", Объект.ДатаОкончания);
	//
	Возврат ПараметрыОбработки;
КонецФункции

&НаСервере
Процедура ВыполнитьВыгрузкуДанныхВБДНаСервере(СтруктураПараметрыФормы)
	ПараметрыОбработки = ПолучитьИЗаполнитьПараметрыОбработки(СтруктураПараметрыФормы);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыгрузитьДанныеВБазуДанныхНаСервере(ПараметрыОбработки);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ИмяКоманды)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыполнитьКомандуСервер(ИмяКоманды);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПараметров()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ЗаполнитьПараметры();
КонецФункции

&НаСервере
Процедура ПриОткрытииНаСервере()
	РеквизитФормыВЗначение("Объект").ВыполнитьЧтениеСохраненныхДанных(ЭтаФорма);
	Если Объект.КоличествоДнейНазад <= 0 Тогда
		Объект.КоличествоДнейНазад = 1;
	КонецЕсли;
	Если Объект.КоличествоВПортиции <= 0 Тогда
		Объект.КоличествоВПортиции = 1000;
	КонецЕсли;
	Если Объект.Периодичность = ""
		ИЛИ Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
		Объект.Периодичность = "День";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекущаяДата = ТекущаяДата();
	ПриОткрытииНаСервере();
	Период.ДатаНачала = НачалоДня(ТекущаяДата);
	Период.ДатаОкончания = КонецДня(ТекущаяДата);
	//
	Объект.ДатаНачала = Период.ДатаНачала;
	Объект.ДатаОкончания = Период.ДатаОкончания;
	//
	ТекущийНомерНастройки = 1;
	//
	Если Объект.НастройкиЗапросов.Количество() > 0 Тогда
		ТекущаяСтрока = Объект.НастройкиЗапросов[ТекущийНомерНастройки - 1];
		ЗаполнитьЗначенияСвойств(Объект, ТекущаяСтрока);
	Иначе
		СтрокаТЧ = Объект.НастройкиЗапросов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПример(Команда)
	ВыполнитьВыгрузкуДанныхВБДНаСервере(ЗаполнитьСтруктуруПараметровИзФормы("КомандаПример"));
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьСтруктуруПараметровИзФормы(ИмяТаблицы = "", ИмяПользователя = "")
	СтруктураПараметрыФормы = Новый Структура;
	СтруктураПараметрыФормы.Вставить("ИмяТаблицы", ИмяТаблицы);	
	СтруктураПараметрыФормы.Вставить("ИмяПользователя", ИмяПользователя);
	СтруктураПараметрыФормы.Вставить("ДатаНачала", Период.ДатаНачала);
	СтруктураПараметрыФормы.Вставить("ДатаОкончания", Период.ДатаОкончания);
	СтруктураПараметрыФормы.Вставить("ПроверитьТаблицу", Объект.ПроверитьТаблицу);
	
	Возврат СтруктураПараметрыФормы;
КонецФункции

&НаКлиенте
Функция ЗаполнитьСтруктуруПараметровИзФормыПоЗапросу(ПараметрТекстЗапроса)
	СтруктураПараметрыФормы = Новый Структура;
	СтруктураПараметрыФормы.Вставить("ИмяТаблицы", ?(ЗначениеЗаполнено(Объект.ИмяТаблицы), Объект.ИмяТаблицы, "ТекстЗапроса"));	
	СтруктураПараметрыФормы.Вставить("ДатаНачала", Период.ДатаНачала);
	СтруктураПараметрыФормы.Вставить("ДатаОкончания", Период.ДатаОкончания);
	СтруктураПараметрыФормы.Вставить("ПроверитьТаблицу", Объект.ПроверитьТаблицу);
	СтруктураПараметрыФормы.Вставить("ТекстЗапроса", ПараметрТекстЗапроса);
	СтруктураПараметрыФормы.Вставить("ЭтоПоЗапросу", Истина);
	
	Возврат СтруктураПараметрыФормы;
КонецФункции

&НаКлиенте
Процедура Конструктор(Команда)

    Конструктор = Новый КонструкторЗапроса;
    Конструктор.Текст = Объект.ТекстЗапроса;
    Оповещение = Новый ОписаниеОповещения("ОткрытьКонструкторЗапросаЗавершение", ЭтотОбъект);
    Конструктор.Показать(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаЗавершение(Текст, ДополнительныеПараметры) Экспорт

    Если НЕ Текст = Неопределено Тогда
    	Объект.ТекстЗапроса = Текст;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗапрос(Команда)

  ВыполнитьВыгрузкуДанныхВБДНаСервере(ЗаполнитьСтруктуруПараметровИзФормыПоЗапросу(Объект.ТекстЗапроса));  

КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	СамОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбработки = СамОбъект.ПараметрыОбработки();
	НачальныеПараметры = ПолучитьНачальныеПараметрыФормы();
	НастройкиОбработки = СамОбъект.ПолучитьНастройкиОбработки(НачальныеПараметры);
	СамОбъект.СохранитьПараметрыОбработки(ПараметрыОбработки, НастройкиОбработки);
КонецПроцедуры

&НаСервере
Функция ПолучитьНачальныеПараметрыФормы()
	
	//Результат = Новый Структура();
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала = Период.ДатаНачала;
	Объект.ДатаОкончания = Период.ДатаОкончания;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиДляФонаНаСервере()
	Объект.ИмяПользователя = "Фоновый";
	СамОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбработки = СамОбъект.ПараметрыОбработки(Объект.ИмяПользователя);
	НачальныеПараметры = ПолучитьНачальныеПараметрыФормы();
	НастройкиОбработки = СамОбъект.ПолучитьНастройкиОбработки(НачальныеПараметры);
	СамОбъект.СохранитьПараметрыОбработки(ПараметрыОбработки, НастройкиОбработки);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиДляФона(Команда)
	Если Объект.НастройкиЗапросов.Количество() <= 0 Тогда
		СтрокаТЧ = Объект.НастройкиЗапросов.Добавить();
		ЗаполнитьЗначенияСвойств(Объект, СтрокаТЧ);
	Иначе
		Если ЭтотОбъект.ТекущийЭлемент = Элементы.СтраницаТаблицаНастройкиЗапросов Тогда
		Иначе
			ТекущаяСтрока = Объект.НастройкиЗапросов[ТекущийНомерНастройки - 1];
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Объект);
		КонецЕсли;	
	КонецЕсли;
	СохранитьНастройкиДляФонаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьНастройкиДляФонаНаСервере()
	Объект.ИмяПользователя = "Фоновый";
	СамОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбработки = СамОбъект.ПараметрыОбработки(Объект.ИмяПользователя);
	НачальныеПараметры = ПолучитьНачальныеПараметрыФормы();
	НастройкиОбработки = СамОбъект.ПолучитьНастройкиОбработки(НачальныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНастройкиДляФона(Команда)
	ПолучитьНастройкиДляФонаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьФоновоеЗадание(Команда)
	Объект.ИмяПользователя = "Фоновый";
	ВыполнитьВыгрузкуДанныхВБДНаСервере(ЗаполнитьСтруктуруПараметровИзФормы("ФоноваяПоУмолчанию"));
КонецПроцедуры

&НаСервере
Процедура ВыручкаИСебестоимостьПродажПриходДСНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВыручкаИСебестоимостьПродажПриходДС(Команда)
	ВыполнитьВыгрузкуДанныхВБДНаСервере(ЗаполнитьСтруктуруПараметровИзФормы("ВыручкаИСебестоимостьПродажПриходДС", "Форма"));
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьФоновоеЗаданиеКоманда1(Команда)
	ВыполнитьКомандуНаСервере("Синхронизация1C_НастройкаЗапроса_1");
КонецПроцедуры
