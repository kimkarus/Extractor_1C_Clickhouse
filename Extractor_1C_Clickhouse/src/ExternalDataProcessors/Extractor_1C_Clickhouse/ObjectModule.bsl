//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start
Функция СведенияОВнешнейОбработке() Экспорт 
	
	ИмяОтчетаОбработки = ЭтотОбъект.Метаданные().Имя; 
	Синоним = ЭтотОбъект.Метаданные().Синоним + " " + ЭтотОбъект.Метаданные().Комментарий; 
	Синоним = ?(ЗначениеЗаполнено(Синоним), Синоним, ИмяОтчетаОбработки);
	Автор = Символы.ПС + "by Ilya Kosarev (kimkarus)" + Символы.ПС + "Авторское право на основе свидетельства № 2024668582 от 08.08.2024, ФИПС (Роспатент)"; 
		
	РегистрационныеДанные = Новый Структура();
	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
	РегистрационныеДанные.Вставить("Наименование", Синоним);
	РегистрационныеДанные.Вставить("Версия", "1.1.8");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	РегистрационныеДанные.Вставить("Информация", "Обработка "+ Синоним + Автор); 
	РегистрационныеДанные.Вставить("ВерсияБСП", "1.2.1.4");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	// Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, Синоним +" ручное", "Синхронизация1C_ClickHouse", "ОткрытиеФормы", Истина);
	ДобавитьКоманду(ТаблицаКоманд, "Фоновая по умолчанию", "Синхронизация1C_ClickHouseНаСервере_ФоноваяПоУмолчанию" , "ВызовСерверногоМетода");
	
	// Сохраним таблицу команд в параметры регистрации обработки
	РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);
	
	Возврат РегистрационныеДанные;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start	 
Функция ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды = Неопределено) Экспорт
	
	ВыполнитьКомандуСервер(ИдентификаторКоманды);
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 25-03-2025 19:30 start	 
Функция ВыполнитьКомандуСервер(ИдентификаторКоманды) Экспорт
	
	МассивПодстроки = СтрРазделить(ИдентификаторКоманды, "_");
	Если МассивПодстроки[1] = "ClickHouseНаСервере" Тогда  
		ПараметрыОбработки = ЗаполнитьПараметры();
		ПараметрыОбработки.Вставить("ИмяТаблицы", МассивПодстроки[2]);
		ВыгрузитьДанныеClickHouseНаСервере(ПараметрыОбработки, МассивПодстроки);
	КонецЕсли;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 25-03-2025 19:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start
Функция ЗаполнитьПараметры() Экспорт
	ТекущаяДата = ТекущаяДата();
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("ИспользоватьСтарыйМетодФоновыхЗаданий", Ложь);
	СтруктураПараметры.Вставить("ПроверитьТаблицу", Ложь);	
	СтруктураПараметры.Вставить("Адрес", "IP");
	СтруктураПараметры.Вставить("Порт", 8123);
	СтруктураПараметры.Вставить("ЭтоЗащищенноеСоединение", Ложь);
	СтруктураПараметры.Вставить("ПутьДоСертификата", "");
	СтруктураПараметры.Вставить("Логин", "default");
	СтруктураПараметры.Вставить("Пароль", "password");
	СтруктураПараметры.Вставить("ИмяБазы", "db_name");
	//ClickHouseDB, PostgreSQL
	СтруктураПараметры.Вставить("ТипБазы", "ClickHouseDB");
	СтруктураПараметры.Вставить("ИмяТаблицы", "ИмяТаблицы");
	СтруктураПараметры.Вставить("ИмяПользователя", "Фоновый");	
	//	
	СтруктураПараметры.Вставить("ДатаНачала", ДатаДнейНазад(ТекущаяДата, 1));
	СтруктураПараметры.Вставить("ДатаОкончания", КонецДня(ТекущаяДата));
	//
	СтруктураПараметры.Вставить("ЭтоПоЗапросу", Ложь);
	СтруктураПараметры.Вставить("ЭтоТекущаяДата", Ложь);
	СтруктураПараметры.Вставить("ТекстЗапроса", "");
	СтруктураПараметры.Вставить("ИспользоватьПериодВКлюче", Ложь);
	СтруктураПараметры.Вставить("КоличествоДнейНазад", 1);
	//
	СтруктураПараметры.Вставить("КомандыФоновые", Новый ТаблицаЗначений());
	Возврат СтруктураПараметры;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										   
Функция ПолучитьТаблицуКоманд()
 
     Команды = Новый ТаблицаЗначений;
     Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
     Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
     Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
     Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
     Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
     Возврат Команды;
 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end
 
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																					 
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
 
      НоваяКоманда = ТаблицаКоманд.Добавить();
      НоваяКоманда.Представление = Представление;
      НоваяКоманда.Идентификатор = Идентификатор;
      НоваяКоманда.Использование = Использование;
      НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
      НоваяКоманда.Модификатор = Модификатор;
 
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start 
Процедура ВыгрузитьДанныеClickHouseНаСервере(Параметры, МассивПодстроки = Неопределено) Экспорт
	
	Если Параметры.ИмяТаблицы = "ФоноваяПоУмолчанию" 
		ИЛИ Параметры.ИмяПользователя = "Фоновый" Тогда
		ПараметрыСохраненные = ПолучитьСохраненныеДанные("Фоновый").Объект;
		ЗаполнитьЗначенияСвойств(Параметры, ПараметрыСохраненные);
	КонецЕсли;
	//
	Если Не ЕстьБазаВ(Параметры.ИмяБазы, Параметры) Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеБазыДанных(Параметры);
		БазаСоздана = ВыполнитьЗапросPOST(ТекстЗапроса, Параметры);
	КонецЕсли;
	Параметры.Вставить("ИмяТаблицыТранслит", Транслит(Параметры.ИмяТаблицы));
	Если Параметры.ЭтоТекущаяДата Тогда
		ТекущаяДата = ТекущаяДата();
		Параметры.Вставить("ДатаНачала", ДатаДнейНазад(ТекущаяДата, Параметры.КоличествоДнейНазад));
		Параметры.Вставить("ДатаОкончания", КонецДня(ТекущаяДата));
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start		  
	//
	ПараметрыЗапроса = ПолучитьСтруктуруПараметровЗапроса(Параметры);
	//
	Если Не ЕстьТаблицаВ(Параметры.ИмяТаблицы, Параметры) Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанных(Параметры, ПараметрыЗапроса.ПараметрыМакета, ПараметрыЗапроса.ПоляНабораДанных, ПараметрыЗапроса.МассивПолейКлючейПериод, ПараметрыЗапроса.ДополнительныеПараметры);
		ТаблицаСоздана = ВыполнитьЗапросPOST(ТекстЗапроса, Параметры);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 19:30 start
	ОписаниеТаблицыБД = ОписаниеТаблицыВ(Параметры.ИмяТаблицы, Параметры);
	Параметры.Вставить("ОписаниеТаблицыБД", ОписаниеТаблицыБД);
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 19:30 end
	Запрос = УстановитьПараметрыЗапросаПоУмолчанию(Параметры, ПараметрыЗапроса);
	ВыгрузитьДанныеClickHouse_Запрос_НаСервере(Запрос, Параметры, ПараметрыЗапроса);	
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end																																							  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2024 9:30 start
Функция ДатаСУчетомПериодичности(Дата, Периодичность, ЭтоНачало = Истина)
	Если Периодичность = "Месяц" Тогда
		Если ЭтоНачало Тогда
			Возврат НачалоМесяца(Дата);
		Иначе
			Возврат КонецМесяца(Дата);
		КонецЕсли;
	ИначеЕсли Периодичность = "День" Тогда
		Если ЭтоНачало Тогда
			Возврат НачалоДня(Дата);
		Иначе
			Возврат КонецДня(Дата);
		КонецЕсли;
	Иначе
		Если ЭтоНачало Тогда
			Возврат НачалоМесяца(Дата);
		Иначе
			Возврат КонецМесяца(Дата);
		КонецЕсли;
	КонецЕсли;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2024 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
Функция ПолучитьОсобыеПараметры(ДополнительныеПараметры, ПараметрыМакета)
	СтруктураПараметров = Новый Структура("Периодичность, ЕстьОсобоеПолеДатыОкончениеПериода");
	
	СтруктураПараметров.Вставить("Периодичность", ДополнительныеПараметры.Периодичность);
	СтруктураПараметров.Вставить("ЕстьОсобоеПолеДатыОкончениеПериода", ЕстьОсобоеПолеДатыОкончениеПериода(ПараметрыМакета));
	
	Возврат СтруктураПараметров;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end
	
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
Функция ВернутьМассивОсобыхПолейДатыОкончениеПериода()
	МассивПолей = Новый Массив;
	МассивПолей.Добавить("НачалоПериодаРегистрации");
	МассивПолей.Добавить("ОкончаниеПериодаРегистрации");
	МассивПолей.Добавить("НачалоПериодаОказанияУслуг");
	МассивПолей.Добавить("ОкончаниеПериодаОказанияУслуг");
	МассивПолей.Добавить("НачалоПериодаОтнесенияУслуг");
	МассивПолей.Добавить("ОкончаниеПериодаОтнесенияУслуг");
	Возврат МассивПолей;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
Функция ЕстьОсобоеПолеДатыОкончениеПериода(ПараметрыМакета)
	МассивПолей = ВернутьМассивОсобыхПолейДатыОкончениеПериода();
	
	Для каждого СтрокаПараметра из ПараметрыМакета Цикл
		Для каждого СтрокаМ из МассивПолей Цикл
			Если СтрокаМ = СтрокаПараметра.Имя Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start									   
Функция ВернутьДату_Запрос_НаСервере(ИмяПоля, ПериодОтчета, НоваяДатаОтчета, ОсобыеПараметры)
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start																				 
	Если ИмяПоля = "ДатаОтчетаСутки1" Тогда
		Возврат НачалоДня(ДатаДнейНазад(ПериодОтчета, 1));
	КонецЕсли;
	Если ИмяПоля = "ДатаОтчетаСутки2" Тогда
		Возврат КонецДня(ДатаДнейНазад(ПериодОтчета, 1));
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end																			   
	Если ИмяПоля = "Дата1" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если ИмяПоля = "Дата2" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	Если ИмяПоля = "ДатаНачала" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если ИмяПоля = "ДатаОкончания" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	Если ИмяПоля = "Период" Тогда
		Если ОсобыеПараметры.ЕстьОсобоеПолеДатыОкончениеПериода Тогда
			Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
		КонецЕсли;
		Возврат НачалоДня(ПериодОтчета);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
	Если ИмяПоля = "НачалоПериодаРегистрации" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если ИмяПоля = "ОкончаниеПериодаРегистрации" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	//
	Если ИмяПоля = "НачалоПериодаОказанияУслуг" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если ИмяПоля = "ОкончаниеПериодаОказанияУслуг" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	//
	Если ИмяПоля = "НачалоПериодаОтнесенияУслуг" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если ИмяПоля = "ОкончаниеПериодаОтнесенияУслуг" Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end
	Если ИмяПоля = "ТекущаяДатаОтчета" Тогда
		Возврат ПериодОтчета;
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start																				 
	Если ИмяПоля = "ДатаОтчетаВывод" Тогда
		Возврат Формат(НачалоДня(ПериодОтчета), "ДФ=dd.MM.yyyy");
	КонецЕсли;
	Если ИмяПоля = "ДатаОтчета" Тогда
		Возврат НачалоДня(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "ПериодОтчета" Тогда
		Возврат НачалоДня(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "ПериодДень1" Тогда
		Возврат НачалоДня(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "ПериодДень2" Тогда
		Возврат КонецДня(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "КонецОтчета" Тогда
		Возврат НачалоДня(ПериодОтчета);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end																			   
	Если ИмяПоля = "ДатаПланНачало" Тогда
		Возврат НачалоМесяца(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "ДатаПланКонец" Тогда
		Возврат КонецДня(ДатаДнейНазад(ПериодОтчета, 1));
	КонецЕсли;
	Если ИмяПоля = "ТекущаяДатаОтчетБаланс" Тогда
		Возврат КонецДня(НоваяДатаОтчета);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start																				 
	Если ИмяПоля = "ТекущаяДата" Тогда
		Возврат НачалоДня(НоваяДатаОтчета);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end																			   
	Если ИмяПоля = "ТекущаяДатаОтчетЗаказ" Тогда
		Возврат КонецДня(НоваяДатаОтчета);
	КонецЕсли;
	Если ИмяПоля = "ТекущаяДатаОтчетПоОперациямОтбор" Тогда
		Возврат НачалоДня(НоваяДатаОтчета);
	КонецЕсли;
	Если ИмяПоля = "ТекущаяДатаОтчетСводноОтправление3" Тогда
		Возврат КонецДня(НоваяДатаОтчета);
	КонецЕсли;
	Если ИмяПоля = "ТекущаяДатаОтчетСводноОтправлениеТолько" Тогда
		Возврат КонецДня(НоваяДатаОтчета);
	КонецЕсли;
	Если ИмяПоля = "ТекущаяДатаОтчетСводноОтправлениеНазначение3" Тогда
		Возврат КонецДня(НоваяДатаОтчета);
	КонецЕсли;
	Если ИмяПоля = "ДатаДислокацияПогружено1" Тогда
		Возврат НачалоМесяца(ПериодОтчета);
	КонецЕсли;
	Если ИмяПоля = "ДатаДислокацияПогружено2" Тогда
		Возврат КонецМесяца(ПериодОтчета);
	КонецЕсли;
	
	
	Если СтрНайти(ИмяПоля, "Период") > 0 Тогда
		Возврат НачалоМесяца(ПериодОтчета);
	КонецЕсли;
	Если СтрНайти(ИмяПоля, "Текущая") > 0 Тогда
		Возврат НачалоМесяца(ПериодОтчета);
	КонецЕсли;
	Если СтрНайти(ИмяПоля, "Дата1") > 0 Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если СтрНайти(ИмяПоля, "Начало") > 0 Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Истина);
	КонецЕсли;
	Если СтрНайти(ИмяПоля, "Дата2") > 0 Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;
	Если СтрНайти(ИмяПоля, "Конец") > 0 Тогда
		Возврат ДатаСУчетомПериодичности(ПериодОтчета, ОсобыеПараметры.Периодичность, Ложь);
	КонецЕсли;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-08-2024 19:30 start
Функция ПолучитьСхемуКомпановкиДанныхПоЗапросу(ТекстЗапроса)
	СКД = СоздатьСхемуКомпоновкиДанных(ТекстЗапроса);

	Возврат СКД;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-08-2024 19:30 end

Функция СоздатьСхемуКомпоновкиДанных(НаборДанных, СтруктураРесурсов = Неопределено, АвтоЗаполнениеДоступныхПолей = Истина, ИмяСтандартногоМакетаОформления = "")
	СКД = Новый СхемаКомпоновкиДанных;

	// Заполнение основных данных схемы
	ИсточникДанных = СКД.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя                = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "Local";

	Если	ТипЗнч(НаборДанных) = Тип("Строка") или
	          ТипЗнч(НаборДанных) = Тип("Запрос") Тогда
		ТекущийНаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		ТекущийНаборДанных.Имя                          = "ОсновнойНабор";
		ТекущийНаборДанных.Запрос                       = ?(ТипЗнч(НаборДанных) = Тип("Строка"), НаборДанных, НаборДанных.Текст);
		ТекущийНаборДанных.ИсточникДанных               = "ИсточникДанных";
		ТекущийНаборДанных.АвтоЗаполнениеДоступныхПолей = АвтоЗаполнениеДоступныхПолей;

		ТипНабора = "Запрос";
	ИначеЕсли ТипЗнч(НаборДанных) = Тип("ТаблицаЗначений") или
	          ТипЗнч(НаборДанных) = Тип("ДеревоЗначений") Тогда
		ТекущийНаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
		ТекущийНаборДанных.Имя            = "ОсновнойНабор";
		ТекущийНаборДанных.ИмяОбъекта     = "ТаблицаИсточник"; // связывание с внешними данными идёт именно по нему
		ТекущийНаборДанных.ИсточникДанных = "ИсточникДанных";

		ТипНабора = "Объект";
	Иначе
		Возврат Неопределено;
	КонецЕсли;

	НастройкиПоУмолчанию = СКД.НастройкиПоУмолчанию;

	// Создание структуры.
	// Группировка, детальные записи и автовыбранное поле
	Группировка = НастройкиПоУмолчанию.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	Группировка.Использование = Истина;

	АвтоПоле = Группировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	АвтоПоле.Использование = Истина;

	КоллекцияКолонок = Новый ТаблицаЗначений;
	КоллекцияКолонок.Колонки.Добавить("Имя");
	КоллекцияКолонок.Колонки.Добавить("ТипЗначения");
	КоллекцияКолонок.Колонки.Добавить("Заголовок");

	Если      ТипНабора = "Запрос" Тогда
		ПостроительЗапроса = Новый ПостроительЗапроса;
		Если ТипЗнч(НаборДанных) = Тип("Строка") Тогда
			ПостроительЗапроса.Текст = СокрЛП(НаборДанных);
		Иначе
			ПостроительЗапроса.Текст = СокрЛП(НаборДанных.Текст);
		КонецЕсли;
		ПостроительЗапроса.ЗаполнитьНастройки();

		Для Каждого ПолеОтбора Из ПостроительЗапроса.ВыбранныеПоля Цикл
			НоваяКолонка = КоллекцияКолонок.Добавить();
			НоваяКолонка.Имя         = ПолеОтбора.Имя;
			НоваяКолонка.ТипЗначения = ПостроительЗапроса.ДоступныеПоля[ПолеОтбора.ПутьКДанным].ТипЗначения;
			НоваяКолонка.Заголовок   = ПолеОтбора.Представление
		КонецЦикла;
	ИначеЕсли ТипНабора = "Объект" Тогда
		Для Каждого Колонка Из НаборДанных.Колонки Цикл
			НоваяКолонка = КоллекцияКолонок.Добавить();
			НоваяКолонка.Имя = Колонка.Имя;
			НоваяКолонка.ТипЗначения = Колонка.ТипЗначения;
			НоваяКолонка.Заголовок = Колонка.Имя;
		КонецЦикла;
	КонецЕсли;

	// Добавление ресурсов
	Если ТипЗнч(СтруктураРесурсов) = Тип("Структура") Тогда
		Для Каждого ЭлСтруктуры Из СтруктураРесурсов Цикл
			// Проверка, а Существует ли поле ресурса среди полей набора
			Если КоллекцияКолонок.Найти(ЭлСтруктуры.Ключ) <> Неопределено Тогда
				// Проверка на правильность указания агрегатной функции
				Если      ЭлСтруктуры.Значение = "Сумма" ИЛИ
				          ЭлСтруктуры.Значение = "Среднее" ИЛИ
				          ЭлСтруктуры.Значение = "Максимум" ИЛИ
				          ЭлСтруктуры.Значение = "Минимум" ИЛИ
				          ЭлСтруктуры.Значение = "Количество" Тогда
					ПолеРесурса             = СКД.ПоляИтога.Добавить();
					ПолеРесурса.ПутьКДанным = ЭлСтруктуры.Ключ;
					ПолеРесурса.Выражение   = ЭлСтруктуры.Значение + "(" + ЭлСтруктуры.Ключ + ")";
				ИначеЕсли ЭлСтруктуры.Значение = "КоличествоРазличные" Тогда
					ПолеРесурса             = СКД.ПоляИтога.Добавить();
					ПолеРесурса.ПутьКДанным = ЭлСтруктуры.Ключ;
					ПолеРесурса.Выражение   = "Количество(Различные " + ЭлСтруктуры.Ключ + ")";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Добавление параметров
	ПараметрДата = СКД.Параметры.Добавить();
	ПараметрДата.Имя = "Дата1";
	ПараметрДата.ТипЗначения = Новый ОписаниеТипов("Дата");
	//ПараметрДата.ТипЗначения.Типы().Добавить(Новый ОписаниеТипов("Дата"));
	ПараметрДата.Значение = ТекущаяДата();
	//
	ПараметрДата = СКД.Параметры.Добавить();
	ПараметрДата.Имя = "Дата2";
	ПараметрДата.ТипЗначения = Новый ОписаниеТипов("Дата");
	ПараметрДата.Значение = ТекущаяДата();
		
	// Добавление полей в набор
	Для Каждого НоваяКолонка Из КоллекцияКолонок Цикл
		ПолеНабора = ТекущийНаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПолеНабора.Заголовок   = СокрЛП(НоваяКолонка.Заголовок);
		ПолеНабора.Поле        = СокрЛП(НоваяКолонка.Имя);
		ПолеНабора.ПутьКДанным = СокрЛП(НоваяКолонка.Имя);

		// Удалим Неопределено и NULL
		Массив = Новый Массив;
		Для Каждого ТекущийТип Из НоваяКолонка.ТипЗначения.Типы() Цикл
			Если ТекущийТип = Тип("Неопределено") ИЛИ ТекущийТип = Тип("NULL") ИЛИ
			     ТекущийТип = Неопределено ИЛИ ТекущийТип = Null Тогда
				Продолжить;
			КонецЕсли;
			Массив.Добавить(ТекущийТип);
		КонецЦикла;
		ПолеНабора.ТипЗначения = Новый ОписаниеТипов(Массив, НоваяКолонка.ТипЗначения.КвалификаторыЧисла,
		                                             НоваяКолонка.ТипЗначения.КвалификаторыСтроки,
		                                             НоваяКолонка.ТипЗначения.КвалификаторыДаты);

		ВыбранноеПолеКомпоновкиДанных = НастройкиПоУмолчанию.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПолеКомпоновкиДанных.Поле          = Новый ПолеКомпоновкиДанных(ПолеНабора.ПутьКДанным);
		ВыбранноеПолеКомпоновкиДанных.Использование = Истина;
	КонецЦикла;

	// Оформление
	Если не ПустаяСтрока(ИмяСтандартногоМакетаОформления) Тогда
		ЗначениеПараметраВывода = НастройкиПоУмолчанию.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("МакетОформления"));
		ЗначениеПараметраВывода.Значение      = ИмяСтандартногоМакетаОформления;
		ЗначениеПараметраВывода.Использование = Истина;
	КонецЕсли;

	Возврат СКД;
КонецФункции

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start			   
Функция ПолучитьСтруктуруПараметровЗапроса(Параметры)
	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура;
	
	Если Параметры.ЭтоПоЗапросу Тогда
		СхемаКомпоновкиДанных = ПолучитьСхемуКомпановкиДанныхПоЗапросу(Параметры.ТекстЗапроса);
	ИначеЕсли Параметры.ИмяПользователя = "Фоновый" Тогда
		СхемаКомпоновкиДанных = ПолучитьСхемуКомпановкиДанныхПоЗапросу(Параметры.ТекстЗапроса);
	Иначе
		СхемаКомпоновкиДанных = ПолучитьМакет("Запрос" + Параметры.ИмяТаблицы);
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = СхемаКомпоновкиДанных.НаборыДанных[0].Запрос;
	ПараметрыМакета = СхемаКомпоновкиДанных.Параметры;
	ПоляНабораДанных = СхемаКомпоновкиДанных.НаборыДанных[0].Поля;
	//
	ДополнительныеПараметры.Вставить("ИспользоватьПериодВКлюче", ПолучитьПараметрМакетаИПараметровПоИмени("ИспользоватьПериодВКлюче", ПараметрыМакета, Параметры));
	ДополнительныеПараметры.Вставить("КоличествоВПортиции", ПолучитьПараметрМакетаИПараметровПоИмени("КоличествоВПортиции", ПараметрыМакета, Параметры));
	ДополнительныеПараметры.Вставить("ОднимФайлом", ПолучитьПараметрМакетаИПараметровПоИмени("ОднимФайлом", ПараметрыМакета, Параметры));
	ДополнительныеПараметры.Вставить("Периодичность", ПолучитьПараметрМакетаИПараметровПоИмени("Периодичность", ПараметрыМакета, Параметры));
	//
	МассивПолей = ВернутьМассивПорядокПериодИзНабораДанных(ПоляНабораДанных, ДополнительныеПараметры);		  
	МассивПолейКлючейПериод = ВернутьМассивПолейКлючейПериодИзНабораДанных(ПоляНабораДанных, ДополнительныеПараметры);
	Если НачалоДня(Параметры.ДатаНачала) <> НачалоДня(Параметры.ДатаОкончания) Тогда
		ДополнительныеПараметры.Вставить("КоличествоДнейНазад", РозностьВДнях(Параметры.ДатаОкончания, Параметры.ДатаНачала));	
	Иначе
		ДополнительныеПараметры.Вставить("КоличествоДнейНазад", ПолучитьПараметрМакетаИПараметровПоИмени("КоличествоДнейНазад", ПараметрыМакета, Параметры));
	КонецЕсли;
	Если ДополнительныеПараметры.КоличествоДнейНазад > 1 Тогда
		Если НачалоДня(Параметры.ДатаНачала) = НачалоДня(Параметры.ДатаОкончания) Тогда 
			Параметры.Вставить("ДатаНачала", ДатаДнейНазад(Параметры.ДатаНачала, ДополнительныеПараметры.КоличествоДнейНазад)); 
		КонецЕсли;
	КонецЕсли;

	
	Возврат Новый Структура("Запрос, ПараметрыМакета, ПоляНабораДанных, МассивПолей, МассивПолейКлючейПериод, ДополнительныеПараметры", Запрос, ПараметрыМакета, ПоляНабораДанных, МассивПолей, МассивПолейКлючейПериод, ДополнительныеПараметры);
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end		 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start									
Функция ПолучитьПараметрМакетаИПараметровПоИмени(ИмяПараметра, ПараметрыМакета, Параметры)
	Для каждого СтрокаПараметра из ПараметрыМакета Цикл
		Если СтрокаПараметра.Имя = ИмяПараметра Тогда
			Возврат СтрокаПараметра.Значение;
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаПараметра из Параметры Цикл
		Если СтрокаПараметра.Ключ = ИмяПараметра Тогда
			Возврат СтрокаПараметра.Значение;
		КонецЕсли;
	КонецЦикла;
	Если ИмяПараметра = "КоличествоДнейНазад" Тогда
		Возврат 1;
	КонецЕсли;

	Если ИмяПараметра = "КоличествоВПортиции" Тогда
		Возврат 1000;
	КонецЕсли;
	
	Если ИмяПараметра = "ОднимФайлом" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ИмяПараметра = "Периодичность" Тогда
		Возврат "Месяц";
	КонецЕсли;
	
	Если ИмяПараметра = "ИспользоватьПериодВКлюче" Тогда
		Возврат Истина;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										
Функция УстановитьПараметрыЗапросаПоУмолчанию(Параметры, ПараметрыЗапроса)
	
	Запрос = ПараметрыЗапроса.Запрос;
	ПараметрыМакета = ПараметрыЗапроса.ПараметрыМакета;
	ПоляНабораДанных = ПараметрыЗапроса.ПоляНабораДанных;
	МассивПолей = ПараметрыЗапроса.МассивПолей;
	ДополнительныеПараметры = ПараметрыЗапроса.ДополнительныеПараметры;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start	  
	МассивПолейКлючейПериод = ПараметрыЗапроса.МассивПолейКлючейПериод;
	//
	Если Не ЕстьТаблицаВ(Параметры.ИмяТаблицы, Параметры) Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанных(Параметры, ПараметрыМакета, ПоляНабораДанных, МассивПолейКлючейПериод, ДополнительныеПараметры);
		ТаблицаСоздана = ВыполнитьЗапросPOST(ТекстЗапроса, Параметры);
	КонецЕсли;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
	ОсобыеПараметры = ПолучитьОсобыеПараметры(ДополнительныеПараметры, ПараметрыМакета);
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end
	Для каждого СтрокаПараметра из ПараметрыМакета Цикл
		Если ТипЗнч(СтрокаПараметра.ТипЗначения) = Тип("ОписаниеТипов") Тогда
			Если Строка(СтрокаПараметра.ТипЗначения) = "Стандартный период" Тогда				
				ДатаНачала = ВернутьДату_Запрос_НаСервере("Начало", Параметры.ДатаНачала, Параметры.ДатаНачала, ОсобыеПараметры);
				ДатаОкончания = ВернутьДату_Запрос_НаСервере("Конец", Параметры.ДатаНачала, Параметры.ДатаНачала, ОсобыеПараметры);
                СтрокаПараметра.Значение = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
				Запрос.УстановитьПараметр(СтрокаПараметра.Имя, СтрокаПараметра.Значение);
			ИначеЕсли Строка(СтрокаПараметра.ТипЗначения) = "Дата" Тогда
				Запрос.УстановитьПараметр(СтрокаПараметра.Имя, ВернутьДату_Запрос_НаСервере(СтрокаПараметра.Имя, Параметры.ДатаНачала, Параметры.ДатаНачала, ОсобыеПараметры));
			Иначе
				Запрос.УстановитьПараметр(СтрокаПараметра.Имя, СтрокаПараметра.Значение);	
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end
	Возврат Запрос;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 19:30 start
Функция СтрРазделитьРасширенная(Строка, Разделитель = ",", ВключатьПустые = Истина,
	СокращатьНепечатаемыеСимволы = Ложь, РазделительЕдинойСтрокой = Истина) Экспорт

	Если РазделительЕдинойСтрокой И СтрДлина(Разделитель) > 1 Тогда

		Результат = РазложитьСтрокуВМассивПодстрок(
		Строка, Разделитель, НЕ ВключатьПустые, СокращатьНепечатаемыеСимволы);

	Иначе

		Результат = СтрРазделить(Строка, Разделитель, ВключатьПустые);
		Если СокращатьНепечатаемыеСимволы Тогда
			Для Индекс = 0 По Результат.Количество()-1 Цикл
				Результат[Индекс] = СокрЛП(Результат[Индекс]);
			КонецЦикла;
		КонецЕсли;

	КонецЕсли;        

	Возврат Результат;

КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start									  
Процедура ВыгрузитьДанныеClickHouse_Запрос_НаСервере(Запрос, Параметры, ПараметрыЗапроса)
	
	ПараметрыМакета = ПараметрыЗапроса.ПараметрыМакета;
	ПоляНабораДанных = ПараметрыЗапроса.ПоляНабораДанных;
	МассивПолей = ПараметрыЗапроса.МассивПолей;
	ДополнительныеПараметры = ПараметрыЗапроса.ДополнительныеПараметры;
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 start
	ДополнительныеПараметры.Вставить("ИмяТаблицы", Параметры.ИмяТаблицы);
	ОсобыеПараметры = ПолучитьОсобыеПараметры(ДополнительныеПараметры, ПараметрыМакета);
	//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-05-2024 9:30 end
	Если ДополнительныеПараметры.КоличествоДнейНазад > 0 Тогда

		НоваяДатаОтчета = НачалоДня(Параметры.ДатаНачала);
		Для Счетчик = 1 По ДополнительныеПараметры.КоличествоДнейНазад + 1 Цикл
			//
			Для каждого СтрокаПараметра из ПараметрыМакета Цикл
				Если ТипЗнч(СтрокаПараметра.ТипЗначения) = Тип("ОписаниеТипов") Тогда
					Если Строка(СтрокаПараметра.ТипЗначения) = "Стандартный период" Тогда
						ДатаНачала = ВернутьДату_Запрос_НаСервере("Начало", НоваяДатаОтчета, НоваяДатаОтчета, ОсобыеПараметры);
						ДатаОкончания = ВернутьДату_Запрос_НаСервере("Конец", НоваяДатаОтчета, НоваяДатаОтчета, ОсобыеПараметры);
                        СтрокаПараметра.Значение = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
						Запрос.УстановитьПараметр(СтрокаПараметра.Имя, СтрокаПараметра.Значение);
					ИначеЕсли Строка(СтрокаПараметра.ТипЗначения) = "Дата" Тогда
						Запрос.УстановитьПараметр(СтрокаПараметра.Имя, ВернутьДату_Запрос_НаСервере(СтрокаПараметра.Имя, НоваяДатаОтчета, НоваяДатаОтчета, ОсобыеПараметры));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ЗаписатьРезультатЗапросаЭкстракторНаСервере(Запрос, Параметры, ПараметрыЗапроса, НоваяДатаОтчета, ПоляНабораДанных, МассивПолей, ДополнительныеПараметры);
			//
			НоваяДатаОтчета = ДатаДнейВперед(НоваяДатаОтчета, 1);
			Если НоваяДатаОтчета > Параметры.ДатаОкончания Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ЗаписатьРезультатЗапросаЭкстракторНаСервере(Запрос, Параметры, ПараметрыЗапроса, Параметры.ДатаНачала, ПоляНабораДанных, МассивПолей, ДополнительныеПараметры);
	КонецЕсли;	 
	
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:3 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start											  
Функция ДатаДнейВперед(ДатаНачала, КоличествоДней)
	Возврат НачалоДня(ДатаНачала) + 60 * 60 * 24 * КоличествоДней; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:3 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start									
Функция ДатаДнейНазад(ДатаНачала, КоличествоДней)
	Возврат НачалоДня(ДатаНачала) - 60 * 60 * 24 * КоличествоДней; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:3 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										
Функция РозностьВДнях(ДатаОкончания, ДатаНачала)
	Возврат (НачалоДня(ДатаОкончания) - НачалоДня(ДатаНачала)) / (60 * 60 * 24); 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:3 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 30-05-2024 19:30 start
Функция ЕстьКолонкаВТЗ(ТЗ, ИмяКолонки)
	Для каждого СтрокаК из ТЗ.Колонки Цикл
		Если ВРег(СтрокаК.Имя) = ВРег(ИмяКолонки) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 30-05-2024 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																						 
Процедура ЗаписатьРезультатЗапросаЭкстракторНаСервере(Запрос, Параметры, ПараметрыЗапроса, ПериодДата, ПоляНабораДанных = Неопределено, МассивПолей = Неопределено, ДополнительныеПараметры = Неопределено, ВходнаяТЗ = Неопределено, МассивПолейЗапрос = Неопределено, ИндексацияТЗ = Неопределено, ЕстьРазница = Неопределено)
	Если ВходнаяТЗ = Неопределено Тогда
		РезультатЗапроса = Запрос.Выполнить();
		МассивПолейЗапрос = ВернутьМассивПорядокПериодИзРезультатаЗапроса(РезультатЗапроса, ДополнительныеПараметры, "Имя");
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если МассивПолейЗапрос = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//
	Если ВходнаяТЗ = Неопределено Тогда
		ВыборкаРезультата = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.Прямой);	
	Иначе
		ВыборкаРезультата = ВходнаяТЗ.Скопировать();	
	КонецЕсли;
	РезультатИндексацииПоСКД = ВернутьИндекациюПоСКДОписаниеТаблицыБД(Параметры.ОписаниеТаблицыБД, МассивПолейЗапрос, Параметры);
	ИндексацияТЗ = РезультатИндексацииПоСКД.ИндексацияТЗ;
	ЕстьРазница = РезультатИндексацииПоСКД.ЕстьРазница;
	//
	Если ЕстьРазница И Параметры.ПроверитьТаблицу Тогда
		НайденныйСтроки = ИндексацияТЗ.НайтиСтроки(Новый Структура("ЕстьРазница", Истина));
		Сообщение = "";
		Для каждого СтрокаН из НайденныйСтроки Цикл
			Сообщение = Сообщение + Символы.ПС + СтрокаН.СозданиеПоля;	
		КонецЦикла;
		Сообщить(Сообщение);
		Возврат;
	КонецЕсли;
	//
	КоличествоСтрокМаксЗаРаз = ДополнительныеПараметры.КоличествоВПортиции;
	ЕстьКолонкаПериодРегистратора = ЕстьКолонкаВТЗ(ВыборкаРезультата, "ПериодРегистратор");
	Если ДополнительныеПараметры.ОднимФайлом Тогда
		СтрокиТекстаЗапроса = "";
		КоличествоСтрокОбработано = 0;
		ЗначенияЗапроса = "";
		КоличествоЗаписей = ВыборкаРезультата.Количество();
		ИндексЗаписи = 0;
		Для каждого СтрокаР из ВыборкаРезультата Цикл
			Если Параметры.ТипБазы = "ClickHouseDB" Тогда
				ТекстЗапроса = "INSERT INTO " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит + " (*)";
			ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
				ТекстЗапроса = "INSERT INTO " + Параметры.ИмяТаблицыТранслит + "";
			Иначе
			КонецЕсли;
			
			//
			КоличествоСтрокОбработано = КоличествоСтрокОбработано + 1;
			ИндексЗаписи = ИндексЗаписи + 1;
			ПериодДата = ?(ЕстьКолонкаПериодРегистратора, СтрокаР.ПериодРегистратор, ПериодДата);  
			Если КоличествоСтрокОбработано = КоличествоСтрокМаксЗаРаз ИЛИ ИндексЗаписи = КоличествоЗаписей Тогда
				ЗначенияЗапроса = ЗначенияЗапроса + ВернутьЗначенияЗапрос(СтрокаР, Параметры, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
				Если Параметры.ТипБазы = "ClickHouseDB" Тогда
					ТекстЗапросаPOST = ТекстЗапроса + " VALUES " + ЗначенияЗапроса + ";";
				ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
					СтрокаПоля = ПолучитьКлючИзМассива(МассивПолей);
					ТекстЗапроса = ТекстЗапроса + " ( " + СтрокаПоля + ")";
					ТекстЗапроса = ТекстЗапроса + " VALUES " + ЗначенияЗапроса + "";
					СтрокаПоляКлючей = ПолучитьКлючИзМассива(ПараметрыЗапроса.МассивПолейКлючейПериод);
					ТекстЗапроса = ТекстЗапроса + " ON CONFLICT (" + СтрокаПоляКлючей + ") DO UPDATE SET";
					МассивПолейЗначения = ПолучитьМассивПолейЗначения(ПараметрыЗапроса);
					//
					СтрокаПоляЗначения = ПолучитьКлючИзМассива(МассивПолейЗначения);
					СтрокаПоляЗначения_EXCLUDED = ПолучитьКлючИзМассива(МассивПолейЗначения, "EXCLUDED.");
					//
					ТекстЗапросаPOST = ТекстЗапроса + " (" + СтрокаПоляЗначения + ") = (" + СтрокаПоляЗначения_EXCLUDED + ")";
				Иначе
				КонецЕсли;
				//
				РезультатВыполненияЗапроса = ВыполнитьЗапросPOST(ТекстЗапросаPOST, Параметры);
				//
				Если РезультатВыполненияЗапроса Тогда
					РезультатВыполненияЗапроса = ВыполнитьРезультатВыполненияЗапросаПосле(Параметры);
				Иначе
					//РезультатВыполненияЗапроса = ВыполнитьРезультатВыполненияЗапросаПриОшибке(ЗначенияЗапроса, Параметры, ПараметрыЗапроса, ВыборкаРезультата, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
				КонецЕсли;
				КоличествоСтрокОбработано = 0;
				ЗначенияЗапроса = "";
			Иначе
				ПериодДата = ?(ЕстьКолонкаПериодРегистратора, СтрокаР.ПериодРегистратор, ПериодДата);  
				ЗначенияЗапроса = ЗначенияЗапроса + ВернутьЗначенияЗапрос(СтрокаР, Параметры, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
				ЗначенияЗапроса = ЗначенияЗапроса + "," + Символы.ПС;		
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		ТЗ = Новый ТаблицаЗначений;
		Счетчик = 0;
		СчетчикИтераций = 0;
		Для каждого СтрокаР из ВыборкаРезультата Цикл
			Счетчик = Счетчик + 1;
			Если Счетчик >= КоличествоСтрокМаксЗаРаз Тогда
				СчетчикИтераций = СчетчикИтераций + 1;
				ДополнительныеПараметры.Вставить("СчетчикИтераций", СчетчикИтераций);
				ЗаполнитьЗначенияСвойств(ТЗ.Добавить(), СтрокаР);
				//
				//Выполнить фоновое задание и передать значения
				//
				ЗапуститьФоновоеЗаданиеЭкстрактор(Параметры, ПериодДата, МассивПолей, ДополнительныеПараметры, ТЗ, МассивПолейЗапрос, РезультатИндексацииПоСКД);
				//Сбросить ТЗ и счетчики
				ТЗ = Новый ТаблицаЗначений;
				Счетчик = 0;
				//
			Иначе
				ЗаполнитьЗначенияСвойств(ТЗ.Добавить(), СтрокаР);
			КонецЕсли;
			//ВставитьЗаписьВБД(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:3 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 19:30 start
Функция ВыполнитьЗапросPOST(ТекстЗапроса, Параметры)
	РезультатВыполненияЗапроса = Ложь;
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		РезультатВыполненияЗапроса = ВыполнитьЗапросPOST_ClickHouseDB(ТекстЗапроса, Параметры);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		РезультатВыполненияЗапроса = ВыполнитьЗапросPOST_PostgreSQL(ТекстЗапроса, Параметры);
	Иначе
	КонецЕсли;
	Возврат РезультатВыполненияЗапроса;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 19:30 start
Функция ВыполнитьРезультатВыполненияЗапросаПосле(Параметры)
	РезультатВыполненияЗапроса = Ложь;
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		ТекстЗапроса = "OPTIMIZE TABLE " + Параметры.ИмяБазы + "." + Параметры.ИмяТаблицыТранслит +" FINAL";
		РезультатВыполненияЗапроса = ВыполнитьЗапросPOST_ClickHouseDB(ТекстЗапроса + ";", Параметры);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
	Иначе
	КонецЕсли;
	Возврат РезультатВыполненияЗапроса;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 start
Функция ВыполнитьРезультатВыполненияЗапросаПриОшибке(ЗначенияЗапроса, Параметры, ПараметрыЗапроса, ТЗ, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница)
	РезультатВыполненияЗапроса = Ложь;
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
	Иначе
	КонецЕсли;
	Возврат РезультатВыполненияЗапроса;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 start
Функция ПолучитьМассивПолейЗначения(ПараметрыЗапроса)
	МассивМ = Новый Массив;
	
	Для каждого СтрокаМ из ПараметрыЗапроса.МассивПолей Цикл
		Индекс = ПараметрыЗапроса.МассивПолейКлючейПериод.Найти(СтрокаМ);
		Если Индекс = Неопределено Тогда
		    МассивМ.Добавить(СтрокаМ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивМ;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 start
Функция ВернутьИндекациюПоСКДОписаниеТаблицыБД(ВходящаяТЗ, МассивПолейЗапрос, Параметры)
	РезультатТЗ = ВходящаяТЗ.СкопироватьКолонки();
	Результат = Новый Структура("ИндексацияТЗ, ЕстьРазница", ВходящаяТЗ, Ложь);
	//
	Если ВходящаяТЗ.Количество() <> МассивПолейЗапрос.Количество() Тогда
		Результат.Вставить("ЕстьРазница", Истина);	
	КонецЕсли;
	//
	Индекс = 0;
	Для каждого СтрокаМ из МассивПолейЗапрос Цикл
		ТранслитСтрокаМ = Транслит(СтрокаМ);
		НайденнаяСтрока = ВходящаяТЗ.Найти(ТранслитСтрокаМ, "Имя");
		Если НайденнаяСтрока = Неопределено Тогда 
			НайденнаяСтрока = РезультатТЗ.Добавить();
			НайденнаяСтрока.ЕстьРазница = Истина;
			Результат.Вставить("ЕстьРазница", Истина);
		Иначе
			НайденнаяСтрока = РезультатТЗ.Добавить();
			НайденнаяСтрока.ЕстьРазница = Ложь;
			Результат.Вставить("ЕстьРазница", Ложь);
		КонецЕсли;
		НайденнаяСтрока.ИмяСКД = СтрокаМ;
		НайденнаяСтрока.ИндексСКД = Индекс;
			
		НайденнаяСтрока.СозданиеПоля = "ALTER TABLE " + Параметры.ИмяБазы + "." + Параметры.ИмяТаблицыТранслит + " ADD COLUMN `" + ТранслитСтрокаМ + "` String;"; 
		//
		Индекс = Индекс + 1;
	КонецЦикла;
	//
	Результат.Вставить("ИндексацияТЗ", РезультатТЗ);
	Возврат Результат;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 28-03-2025 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 start																						 
Процедура ЗаписатьРезультатЗапросаЭкстракторФоновоеЗадание(ПараметрыЗапуска = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Запрос = ПараметрыЗапуска.Запрос;
	Параметры = ПараметрыЗапуска.Параметры;
	ПериодДата = ПараметрыЗапуска.ПериодДата;
	ПоляНабораДанных = ПараметрыЗапуска.ПоляНабораДанных;
	МассивПолей = ПараметрыЗапуска.МассивПолей;
	ДополнительныеПараметры = ПараметрыЗапуска.ДополнительныеПараметры;
	ВходнаяТЗ = ПараметрыЗапуска.ВходнаяТЗ;
	МассивПолейЗапрос = ПараметрыЗапуска.МассивПолейЗапрос;
	ИндексацияТЗ = ПараметрыЗапуска.ИндексацияТЗ;
	ЕстьРазница = ПараметрыЗапуска.ЕстьРазница;
	ПараметрыЗапроса = ПолучитьСтруктуруПараметровЗапроса(Параметры);
	
	ЗаписатьРезультатЗапросаЭкстракторНаСервере(
		Запрос, 
		Параметры,
		ПараметрыЗапроса, 
		ПериодДата, 
		ПоляНабораДанных, 
		МассивПолей, 
		ДополнительныеПараметры, 
		ВходнаяТЗ, 
		МассивПолейЗапрос,
		ИндексацияТЗ,
		ЕстьРазница);
	
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 start
Процедура ЗапуститьФоновоеЗаданиеЭкстрактор(Параметры, ПериодДата, МассивПолей = Неопределено, ДополнительныеПараметры = Неопределено, ВходнаяТЗ = Неопределено, МассивПолейЗапрос = Неопределено, ИндексацияТЗ = Неопределено, ЕстьРазница = Неопределено)
	ДополнительныеПараметры.Вставить("ОднимФайлом", Истина);
	УникальныйИдентификатор = Новый УникальныйИдентификатор;
	//
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("Запрос", Неопределено);
	ПараметрыЗапуска.Вставить("Параметры", Параметры);
	ПараметрыЗапуска.Вставить("ПериодДата", ПериодДата);
	ПараметрыЗапуска.Вставить("ПоляНабораДанных", Неопределено);
	ПараметрыЗапуска.Вставить("МассивПолей", МассивПолей);
	ПараметрыЗапуска.Вставить("СчетчикИтераций", ДополнительныеПараметры.СчетчикИтераций);
	ПараметрыЗапуска.Вставить("ИмяТаблицы", ДополнительныеПараметры.ИмяТаблицы);
	ПараметрыЗапуска.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	ПараметрыЗапуска.Вставить("ВходнаяТЗ", ВходнаяТЗ);
	ПараметрыЗапуска.Вставить("МассивПолейЗапрос", МассивПолейЗапрос);
	ПараметрыЗапуска.Вставить("ИндексацияТЗ", ИндексацияТЗ);
	ПараметрыЗапуска.Вставить("ЕстьРазница", ЕстьРазница);
	//
	//ПараметрыЗапуска.Вставить("ТекущийПользователь", ПолучитьТекущийПользователь());
		
	СтруктураФоновогоЗадания = ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
    
	//ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	//ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	// указываем интервал обновления состояния в секундах, если не указать, 
	// то интервал будет увеличиваться при каждой итерации в 1.4 раза.
	//ПараметрыОжидания.Интервал = 10;
    
	//ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект), ПараметрыыОжидания);
        
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 start
Функция ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	
	СтрокаНаименование = "Фоновое задание длительной: Синхронизация1C_ClickHouse" + ПараметрыЗапуска.ИмяТаблицы + " " + ПараметрыЗапуска.СчетчикИтераций;
	
	НаименованиеЗадания = НСтр("ru = '" + СтрокаНаименование + "'");
    
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
    
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки", ЭтотОбъект.ИспользуемоеИмяФайла);
	ПараметрыЗадания.Вставить("ИмяМетода", "ЗаписатьРезультатЗапросаЭкстракторФоновоеЗадание");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения", ПараметрыЗапуска);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", Истина);
	ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка",Неопределено);
    
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
    	Если ПараметрыЗапуска.Параметры.ИспользоватьСтарыйМетодФоновыхЗаданий Тогда
		СтруктураФоновогоЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(УникальныйИдентификатор, ВыполняемыйМетод, ПараметрыЗадания, НаименованиеЗадания, Истина);
	Иначе
		СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
	КонецЕсли;
		
	Возврат СтруктураФоновогоЗадания;
    
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 16-01-2023 18:00 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 23-10-2024 18:00 start
Функция ЭкранированиеСпециальныхСимволов(Значение)
	Значение = СтрЗаменить(Значение, "'", "\'");
	Возврат Значение;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 23-10-2024 18:00 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 05-11-2023 9:30 start
Функция ВернутьЗначенияЗапрос(СтрокаР, Параметры, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница)
	Счетчик = 0;
	//КоличествоПолей = МассивПолейЗапрос.Количество();
	КоличествоПолей = ИндексацияТЗ.Количество();
	ТекстЗапросаПоля = "(";
	Для каждого СтрокаТЗ из ИндексацияТЗ Цикл
		Счетчик = Счетчик + 1;
		ЗначениеПоля = Неопределено;
		Если СтрокаТЗ.ИндексСКД < 0 Тогда
			ЗначениеПоля = "'0'";		
		Иначе
			СтрокаП = МассивПолейЗапрос[СтрокаТЗ.ИндексСКД];
			Если ВРег(СтрокаП) = ВРег("Период") > 0 Тогда
				ЗначениеПоля = ПолучитьВремяUTC(ПериодДата);
			Иначе
				Если НайтиПолейВМассиве(МассивПолей, СтрокаП) Тогда
					ЗначениеПоля = Строка(СтрокаР[СтрокаП]);
					//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-11-2023 9:30 start
					ИндексДата = СтрНайти(ВРег(СтрокаП), ВРег("Дата"));
					Если ТипЗнч(СтрокаР[СтрокаП]) = Тип("Дата")
						ИЛИ (ИндексДата > 0 И ИндексДата < 5) Тогда
						
						ЗначениеСтроки = СтрокаР[СтрокаП];
						Если Строка(СтрокаР[СтрокаП]) = "" Тогда
							ЗначениеСтроки = Дата(1,1,1,0,0,0);	
						КонецЕсли;
						ЗначениеПоля = ПолучитьВремяUTC(ЗначениеСтроки);
						//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-11-2023 9:30 end
					ИначеЕсли ТипЗнч(СтрокаР[СтрокаП]) = Тип("Булево") Тогда
						ЗначениеПоля = Число(СтрокаР[СтрокаП]);
						ЗначениеПоля = СтрЗаменить(ЗначениеПоля, ",", ".");
					ИначеЕсли ТипЗнч(СтрокаР[СтрокаП]) = Тип("Число") Тогда
						ЗначениеПоля = ВернутьЧислоБезПробелов(СокрЛП(СтрокаР[СтрокаП]));
						ЗначениеПоля = "'" + ЗначениеПоля + "'";
					ИначеЕсли ТипЗнч(СтрокаР[СтрокаП]) = Тип("Строка") Тогда
						ЗначениеПоля = СокрЛП(Строка(СтрокаР[СтрокаП]));
						ЗначениеПоля = "'" + ЭкранированиеСпециальныхСимволов(ЗначениеПоля) + "'";
					ИначеЕсли ТипЗнч(СтрокаР[СтрокаП]) = Тип("УникальныйИдентификатор") Тогда
						ЗначениеПоля = "'" + СокрЛП(Строка(СтрокаР[СтрокаП])) + "'";
					Иначе
						Если СтрокаР[СтрокаП] <> NULL И СтрокаР[СтрокаП] <> Неопределено Тогда
							ТипЗначения = ТипЗнч(СтрокаР[СтрокаП]);
							ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
							Если ОбъектМетаданных = Неопределено Тогда
								ЗначениеПоля = "'0'";
							ИначеЕсли Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
								ЗначениеПоля =  СокрЛП(Строка(СтрокаР[СтрокаП]));
								ЗначениеПоля = "'" + ЭкранированиеСпециальныхСимволов(ЗначениеПоля) + "'";
							ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
								ЗначениеПоля = СокрЛП(Строка(СтрокаР[СтрокаП]));
								ЗначениеПоля = "'" + ЭкранированиеСпециальныхСимволов(ЗначениеПоля) + "'";
							Иначе
								ЗначениеПоля = "'0'";
							КонецЕсли;
						Иначе
							ЗначениеПоля = СокрЛП(Строка(СтрокаР[СтрокаП]));
							ЗначениеПоля = "'" + ЭкранированиеСпециальныхСимволов(ЗначениеПоля) + "'";
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					ЗначениеПоля = "'0'";
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеПоля = "" Тогда
			ЗначениеПоля = "'0'";
		ИначеЕсли ЗначениеПоля = "0" Тогда
			ЗначениеПоля = "'0'";
		ИначеЕсли ЗначениеПоля = "''" Тогда
			ЗначениеПоля = "'0'";
		Иначе
		КонецЕсли;
	
		ТекстЗапросаПоля = ТекстЗапросаПоля + ЗначениеПоля;
		Если Счетчик <> КоличествоПолей Тогда
			ТекстЗапросаПоля = ТекстЗапросаПоля + ",";	
		КонецЕсли;
	КонецЦикла;
	ТекстЗапросаПоля = ТекстЗапросаПоля + ")";
	Возврат ТекстЗапросаПоля;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 05-11-2023 9:30 start

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start
Функция ВставитьЗаписьВБД(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных = Неопределено, МассивПолей = Неопределено, МассивПолейЗапрос = Неопределено, ИндексацияТЗ = Неопределено, ЕстьРазница = Неопределено)
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		ВставитьЗаписьВClickHouseDB_ПериодСхемаКомпоновкиДанных(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		ВставитьЗаписьВPostgreSQL_ПериодСхемаКомпоновкиДанных(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
	Иначе
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start
Процедура ВставитьЗаписьВClickHouseDB_ПериодСхемаКомпоновкиДанных(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница)
	ТекстДляЗапроса = ВернутьТекстЗапроса(СтрокаР, Параметры, ПараметрыЗапроса, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
	РезультатВыполненияЗапроса = ВыполнитьЗапросPOST_ClickHouseDB(ТекстДляЗапроса, Параметры);
	Ошибка = "";
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start
Процедура ВставитьЗаписьВPostgreSQL_ПериодСхемаКомпоновкиДанных(СтрокаР, Параметры, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница)
	ТекстДляЗапроса = ВернутьТекстЗапроса(СтрокаР, Параметры, ПараметрыЗапроса, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
	РезультатВыполненияЗапроса = ВыполнитьЗапросPOST_PostgreSQL(ТекстДляЗапроса, Параметры);
	Ошибка = "";
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start
Функция ВернутьТекстЗапроса(СтрокаР, Параметры, ПараметрыЗапроса, ПериодДата, ПоляНабораДанных, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница)
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		ТекстЗапроса = "INSERT INTO " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит + " (*)";
		ТекстЗапросаПоля = " VALUES " + ВернутьЗначенияЗапрос(СтрокаР, Параметры, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		ТекстЗапроса = "INSERT INTO " + Параметры.ИмяТаблицыТранслит + "";
		ТекстЗапросаПоля = " VALUES " + ВернутьЗначенияЗапрос(СтрокаР, Параметры, ПериодДата, МассивПолей, МассивПолейЗапрос, ИндексацияТЗ, ЕстьРазница) + "";
		//
		СтрокаПоляКлючей = ПолучитьКлючИзМассива(ПараметрыЗапроса.МассивПолейКлючейПериод);
		ТекстЗапросаПоля = ТекстЗапросаПоля + " ON CONFLICT (" + СтрокаПоляКлючей + ") DO UPDATE SET";
		МассивПолейЗначения = ПолучитьМассивПолейЗначения(ПараметрыЗапроса);
		//
		СтрокаПоляЗначения = ПолучитьКлючИзМассива(МассивПолейЗначения);
		СтрокаПоляЗначения_EXCLUDED = ПолучитьКлючИзМассива(МассивПолейЗначения, "EXCLUDED.");
		//
		ТекстЗапросаПоля = ТекстЗапросаПоля + " (" + СтрокаПоляЗначения + ") = (" + СтрокаПоляЗначения_EXCLUDED + ")";
	Иначе
	КонецЕсли;
	Ошибка = "";
	ТекстДляЗапроса = ТекстЗапроса + " " + ТекстЗапросаПоля + ";";
	Возврат ТекстДляЗапроса;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end																				  
						
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										   
Функция ПолучитьВремяUTC(ПараметрДата) 
	
	ПериодДень = День(ПараметрДата);
	ПериодМесяц = Месяц(ПараметрДата);
	ПериодГод = Год(ПараметрДата);
	ПериодЧас = Час(ПараметрДата);
	ПериодМинута = Минута(ПараметрДата);
	ПериодСекунда = Секунда(ПараметрДата);
	
	Возврат "'" + ВернутьЧислоБезПробелов(ПериодГод, Истина) + "-" + ВернутьЧислоБезПробеловСНулями(ПериодМесяц) + "-" + ВернутьЧислоБезПробеловСНулями(ПериодДень) + " " + ВернутьЧислоБезПробеловСНулями(ПериодЧас) + ":" + ВернутьЧислоБезПробеловСНулями(ПериодМинута) + ":" + ВернутьЧислоБезПробеловСНулями(ПериодСекунда) + "'"; 
КонецФункции 
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																					   
Функция ПолучитьUnixTS(ПараметрДата) 
	Возврат ВернутьЧислоБезПробелов(УниверсальноеВремя(ПараметрДата) - '19700101'); 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																						
Функция ВернутьЧислоБезПробелов(ЧислоИзСтроки = 0, ЭтоГод = Ложь)
	Если ЭтоГод Тогда
		СтрокаЧисло = Формат(ЧислоИзСтроки, "ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=0");
	Иначе
		СтрокаЧисло = Формат(ЧислоИзСтроки, "ЧН=0; ЧГ=0");
	КонецЕсли;
	
	СтрокаЧисло = Строка(СтрокаЧисло);
	СтрокаЧисло = СтрЗаменить(СтрокаЧисло, Символы.НПП, "");
	СтрокаЧисло = СтрЗаменить(СтрокаЧисло, ",", ".");

	Возврат СтрокаЧисло; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start
Функция ВернутьЧислоБезПробеловСНулями(ЧислоИзСтроки)
	Возврат Формат(ЧислоИзСтроки, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=0");
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start	  
Функция НайтиПолейВМассиве(МассивП, Поле)
	Для каждого СтрокаМ из МассивП Цикл
		Если СтрокаМ = Поле Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start	 
Функция ВернутьМассивПорядокПериодИзРезультатаЗапроса(РезультатЗапроса, ДополнительныеПараметры, ИмяПоля = "Поле")
	М = Новый Массив;
	Если ДополнительныеПараметры.ИспользоватьПериодВКлюче Тогда
		ИмяПериод = "Период"; 	
		М.Добавить(ИмяПериод);
	КонецЕсли;
	Для каждого Колонка из РезультатЗапроса.Колонки Цикл
		М.Добавить(Колонка[ИмяПоля]);
	КонецЦикла;
	Возврат М;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start																					   
Функция ВернутьМассивПорядокИзРезультатаЗапроса(РезультатЗапроса)
	М = Новый Массив;
	Для каждого Колонка из РезультатЗапроса.Колонки Цикл
		М.Добавить(Колонка.Имя);
	КонецЦикла;
	Возврат М;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start
Функция ВернутьМассивПорядокПериодИзНабораДанных(ПоляНабораДанных, ДополнительныеПараметры, ИмяПоля = "Поле")
	М = Новый Массив;
	Если ДополнительныеПараметры.ИспользоватьПериодВКлюче Тогда
		ИмяПериод = "Период"; 	
		М.Добавить(ИмяПериод);
	КонецЕсли;
	Для каждого Поле из ПоляНабораДанных Цикл
		М.Добавить(Поле[ИмяПоля]);
	КонецЦикла;
	Возврат М;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start			 
Функция ВернутьМассивПолейКлючейПериодИзНабораДанных(ПоляНабораДанных, ДополнительныеПараметры, ИмяПоля = "Поле")
	М = Новый Массив;
	Если ДополнительныеПараметры.ИспользоватьПериодВКлюче Тогда
		ИмяПериод = "Период"; 	
		М.Добавить(ИмяПериод);
	КонецЕсли;
	Для каждого ПолеНабора из ПоляНабораДанных Цикл
		Если ТипЗнч(ПолеНабора.ТипЗначения) = Тип("ОписаниеТипов") Тогда
			Если Строка(ПолеНабора.ТипЗначения) = "Число" Тогда
				//Возврат "Decimal64(10)";
			ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Дата" 
				И ПолеНабора[ИмяПоля] = "Период" Тогда
				М.Добавить(ПолеНабора[ИмяПоля]);
			ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Дата" Тогда
				//М.Добавить(ПолеНабора.Поле);
			ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Строка" Тогда
				//М.Добавить(ПолеНабора.Поле);
			//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 start
			ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Булево" Тогда
				//М.Добавить(ПолеНабора.Поле);
			//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 end
			Иначе
				М.Добавить(ПолеНабора[ИмяПоля]);
			КонецЕсли;
		Иначе
			М.Добавить(ПолеНабора[ИмяПоля]);	
		КонецЕсли;
	КонецЦикла;
	Возврат М;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 start
Функция ВернутьМассивПорядокИзНабораДанных(ПоляНабораДанных)
	М = Новый Массив;
	Для каждого Поле из ПоляНабораДанных Цикл
		М.Добавить(Поле.Поле);
	КонецЦикла;
	Возврат М;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 03-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 18-08-2024 9:30 start
Функция ПолучитьHTTPСоединение(Параметры)
	Если Параметры.ЭтоЗащищенноеСоединение Тогда
		Если Параметры.ПутьДоСертификата <> "" Тогда
			SSL = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows(), Новый СертификатыУдостоверяющихЦентровФайл(Параметры.ПутьДоСертификата));
		Иначе
			SSL = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows(), Новый СертификатыУдостоверяющихЦентровWindows());
		КонецЕсли;
		Соединение = Новый HTTPСоединение(Параметры.Адрес, Параметры.Порт, Параметры.Логин, Параметры.Пароль,,,SSL);		
	Иначе
		Соединение = Новый HTTPСоединение(Параметры.Адрес, Параметры.Порт, Параметры.Логин, Параметры.Пароль);
	КонецЕсли;	
	Возврат Соединение; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 18-08-2024 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																					
Функция ЕстьБазаВClickHouse(ИмяБазы, Параметры)
	Запрос = "SELECT name, comment FROM system.databases WHERE name = '" + Параметры.ИмяБазы + "';";
	//
	Соединение = ПолучитьHTTPСоединение(Параметры);
	HTTPЗапрос = Новый HTTPЗапрос("?query="+Запрос);
	Результат = Соединение.Получить(HTTPЗапрос);
	ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
	Если ЭтоОшибкаЗапросаClickHouseDB(ТекстОтвета) Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ТекстОтвета <> "" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start																					
Функция ЕстьБазаВPostgreSQL(ИмяБазы, Параметры)
	ТекстЗапрос = "SELECT 1 FROM pg_database WHERE datname = '" + Параметры.ИмяБазы + "';";
	//
	ТекстОтвета = ВыполнитьЗапросGET_PostgreSQL(ТекстЗапрос, Параметры, "get");
	КодРасшифровкиОтвета = ЭтоОшибкаЗапросаPostgreSQL(ТекстОтвета);
	Если КодРасшифровкиОтвета >= 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start																					
Функция ЕстьБазаВ(ИмяБазы, Параметры)
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		Возврат ЕстьБазаВClickHouse(ИмяБазы, Параметры);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		Возврат ЕстьБазаВPostgreSQL(ИмяБазы, Параметры);
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end
																				  
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start 
Функция ТекстЗапросаСозданиеБазыДанных(Параметры)
	ТекстЗапроса = "";
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		ТекстЗапроса = "CREATE DATABASE " + Параметры.ИмяБазы + " COMMENT 'The Metrics database';";
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		ТекстЗапроса = "CREATE DATABASE " + Параметры.ИмяБазы + " COMMENT 'The Metrics database';";
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start									   
Функция ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанных(Параметры, ПараметрыМакета, ПоляМакета, ПоляКлючи, ДополнительныеПараметры, ИмяПоляМ = "Поле")
	ТекстЗапроса = "";
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанныхClickHouseDB(Параметры, ПараметрыМакета, ПоляМакета, ПоляКлючи, ДополнительныеПараметры, ИмяПоляМ);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанныхPostgreSQL(Параметры, ПараметрыМакета, ПоляМакета, ПоляКлючи, ДополнительныеПараметры, ИмяПоляМ);
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;
	
	Возврат ТекстЗапроса;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start
Функция ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанныхClickHouseDB(Параметры, ПараметрыМакета, ПоляМакета, ПоляКлючи, ДополнительныеПараметры, ИмяПоляМ)
	ТекстЗапроса = "CREATE TABLE " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит + "";
	Если ДополнительныеПараметры.ИспользоватьПериодВКлюче Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " (" + Транслит("Период") + " Datetime,";	
	Иначе
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " (";
	КонецЕсли;
	Счетчик = 1;
	Количество = ПоляМакета.Количество();
	Для каждого ПолеМ из ПоляМакета Цикл
		Если Счетчик < Количество Тогда 
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " " + Транслит(ПолеМ[ИмяПоляМ]) + " " + ПолучитьТипПоляНабораClickHouseDB(ПолеМ) + ",";
		Иначе
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " " + Транслит(ПолеМ[ИмяПоляМ]) + " " + ПолучитьТипПоляНабораClickHouseDB(ПолеМ);
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + ")";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ENGINE = ReplacingMergeTree";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "PRIMARY KEY (" + ПолучитьКлючИзМассива(ПоляКлючи) + ")";
	
	Возврат ТекстЗапроса;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start
Функция ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанныхPostgreSQL(Параметры, ПараметрыМакета, ПоляМакета, ПоляКлючи, ДополнительныеПараметры, ИмяПоляМ)
	//ТекстЗапроса = "CREATE TABLE public." + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит + "";
	ТекстЗапроса = "CREATE TABLE " + Параметры.ИмяТаблицыТранслит + "";
	Если ДополнительныеПараметры.ИспользоватьПериодВКлюче Тогда
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " (" + Транслит("Период") + " timestamp without time zone,";	
	Иначе
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " (";
	КонецЕсли;
	Счетчик = 1;
	Количество = ПоляМакета.Количество();
	Для каждого ПолеМ из ПоляМакета Цикл
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " " + Транслит(ПолеМ[ИмяПоляМ]) + " " + ПолучитьТипПоляНабораPostgreSQL(ПолеМ) + ",";
	КонецЦикла;
	СтрокаИзМассивКлючей = ПолучитьКлючИзМассива(ПоляКлючи);
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "CONSTRAINT "+ Параметры.ИмяТаблицыТранслит +"_pkey PRIMARY KEY (" + СтрокаИзМассивКлючей + ")";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + ");";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "CREATE UNIQUE INDEX UNIQUE_" + Параметры.ИмяТаблицыТранслит + "";
	ТекстЗапроса = ТекстЗапроса + " ON " + Параметры.ИмяТаблицыТранслит + "";
	ТекстЗапроса = ТекстЗапроса + " (" + СтрокаИзМассивКлючей + ");";
	
	
	Возврат ТекстЗапроса;	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 start								  
Функция ПолучитьКлючИзМассива(МассивКлючей, Префикс = "")
	КлючМ = Префикс + Транслит(МассивКлючей[0]);
	Количество = МассивКлючей.Количество();
	Счетчик = 1;
	Для каждого КлючС из МассивКлючей Цикл
		Если Счетчик > 1 Тогда 
			КлючМ = КлючМ + "," + Префикс + Транслит(КлючС);
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Возврат КлючМ;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 01-11-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start								  
Функция ПолучитьТипПоляНабораPostgreSQL(ПолеНабора)
	
	Если ТипЗнч(ПолеНабора.ТипЗначения) = Тип("ОписаниеТипов") Тогда
		Если Строка(ПолеНабора.ТипЗначения) = "Число" Тогда
			Возврат "double precision DEFAULT 0";
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Дата" Тогда
			Возврат "timestamp without time zone";
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Строка" Тогда
			Возврат "character varying(255) DEFAULT ' '::character varying";
		//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 start
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Булево" Тогда
			Возврат "bigint DEFAULT 0";
		//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 end
		Иначе
			Возврат "character varying(255) DEFAULT ' '::character varying";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "character varying(255) DEFAULT ' '::character varying";
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start								  
Функция ПолучитьТипПоляНабораClickHouseDB(ПолеНабора)
	
	Если ТипЗнч(ПолеНабора.ТипЗначения) = Тип("ОписаниеТипов") Тогда
		Если Строка(ПолеНабора.ТипЗначения) = "Число" Тогда
			Возврат "Decimal64(10)";
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Дата" Тогда
			Возврат "Datetime";
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Строка" Тогда
			Возврат "String";
		//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 start
		ИначеЕсли Строка(ПолеНабора.ТипЗначения) = "Булево" Тогда
			Возврат "Int";
		//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 07-06-2024 9:30 end
		Иначе
			Возврат "String";
		КонецЕсли;
	КонецЕсли;
	
	Возврат "String";
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start									
Функция ВыполнитьЗапросPOST_ClickHouseDB(ТекстЗапроса, Параметры)
	Запрос = ТекстЗапроса;
	//
	Соединение = ПолучитьHTTPСоединение(Параметры);
	ФайлЗапроса = ПолучитьИмяВременногоФайла();
	ТекстовыйФайл = Новый ТекстовыйДокумент();
	ТекстовыйФайл.УстановитьТекст(Запрос);
	ТекстовыйФайл.Записать(ФайлЗапроса,КодировкаТекста.UTF8);
	HTTPЗапрос = Новый HTTPЗапрос();
	HTTPЗапрос.УстановитьИмяФайлаТела(ФайлЗапроса);
	Результат = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
	Если ЭтоОшибкаЗапросаClickHouseDB(ТекстОтвета) Тогда
		Возврат Ложь;
	КонецЕсли;
	Если СтрНайти(ВРег(ТекстОтвета), "OK") > 0
		ИЛИ ВРег(ТекстОтвета) = "" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 start									
Функция ВыполнитьЗапросPOST_PostgreSQL(ТекстЗапроса, Параметры)
	Запрос = ТекстЗапроса;
	//
	ТекстОтвета = КомандаВыполнитьPostgreSQL(ТекстЗапроса, Параметры, "post");
	КодРасшифровкиОтвета = ЭтоОшибкаЗапросаPostgreSQL(ТекстОтвета);
	Если КодРасшифровкиОтвета >= 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 start									
Функция ВыполнитьЗапросGET_ClickHouseDB(ТекстЗапроса, Параметры)
	Соединение = ПолучитьHTTPСоединение(Параметры);
	HTTPЗапрос = Новый HTTPЗапрос("?query="+ТекстЗапроса);
	Результат = Соединение.Получить(HTTPЗапрос);
	ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
	Возврат ТекстОтвета; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start									
Функция ВыполнитьЗапросGET_PostgreSQL(ТекстЗапроса, Параметры, Тип)
	//Соединение = ПолучитьHTTPСоединение(Параметры);
	//HTTPЗапрос = Новый HTTPЗапрос("?query="+ТекстЗапроса);
	//Результат = Соединение.Получить(HTTPЗапрос);
	//ТекстОтвета = Результат.ПолучитьТелоКакСтроку();
	//
	ДанныеРезультат = КомандаВыполнитьPostgreSQL(ТекстЗапроса, Параметры, Тип);
	//
	Возврат ДанныеРезультат; 
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Функция КомандаВыполнитьPostgreSQL(ТекстЗапроса, Параметры, Тип)
	ИмяФункции = "ВыполнитьPostgreSQL";
	АбсолютныйПутьСкрипта = СохранитьСкриптPythonНаСервере(ИмяФункции);
	ПараметрыЗапуска = "";
	ПараметрыЗапускаСтруктура = СформироватьПараметрыЗапуска_ВыполнитьPostgreSQL(ТекстЗапроса, Параметры, Тип);
	Для Каждого КлючЗначение Из ПараметрыЗапускаСтруктура Цикл
		ПараметрыЗапуска =  ПараметрыЗапуска + " """ + КлючЗначение.Значение + """";
	КонецЦикла;
	КодВозврата = ЗапуститьПриложениеPythonНаСервере(ИмяФункции, ПараметрыЗапуска);
	// Обработка результата выполнения приложения
	Если КодВозврата = 0 Тогда
		ТекстовыйФайл = Новый ТекстовыйДокумент;
	    ТекстовыйФайл.Прочитать(ПараметрыЗапускаСтруктура.АбсолютныйПутьРезультата, КодировкаТекста.UTF8);
		//ДвоичныеДанныеРезультат = Новый ДвоичныеДанные(ПараметрыЗапускаСтруктура.АбсолютныйПутьРезультата);
		//АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеРезультат, Новый УникальныйИдентификатор);
		ДанныеРезультат = ТекстовыйФайл.ПолучитьТекст();
		Возврат ДанныеРезультат;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции	
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Функция ЗапуститьПриложениеPythonНаСервере(ИмяФункции, ПараметрыЗапуска = "")
	
	Перем КодВозврата;
	
	АдресСкрипта = СтрШаблон("%1%2.py",КаталогВременныхФайлов(),ИмяФункции);
	
	// Запуск скрипта
	Парам = Новый Структура("Функция", ИмяФункции);
	ЗапуститьПриложение(СтрШаблон("python %1 %2", АдресСкрипта, ПараметрыЗапуска),,Истина,КодВозврата); 
	
	Возврат КодВозврата;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end


//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Функция СформироватьПараметрыЗапуска_ВыполнитьPostgreSQL(ТекстЗапроса, Параметры, Тип)
	
	КаталогВременныхФайлов = КаталогВременныхФайлов();
	ПараметрыЗапуска = Новый Структура;
	//
	АбсолютныйПуть = КаталогВременныхФайлов + Строка(Новый УникальныйИдентификатор) + ".txt";
	АбсолютныйПутьРезультата = КаталогВременныхФайлов + Строка(Новый УникальныйИдентификатор) + ".txt";
	//
	СохранитьТекстВТекстовыйФайл(ТекстЗапроса, АбсолютныйПуть);
	//
	ПараметрыЗапуска.Вставить("АбсолютныйПутьДанных", АбсолютныйПуть);
	ПараметрыЗапуска.Вставить("АбсолютныйПутьРезультата", АбсолютныйПутьРезультата);
	//
	ПараметрыЗапуска.Вставить("ИмяБазы", Параметры.ИмяБазы);
	ПараметрыЗапуска.Вставить("ИмяПользователя", Параметры.Логин);
	ПараметрыЗапуска.Вставить("Пароль", Параметры.Пароль);
	ПараметрыЗапуска.Вставить("Адрес", Параметры.Адрес);
	ПараметрыЗапуска.Вставить("Тип", Тип);
	//
	Возврат ПараметрыЗапуска;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Процедура СохранитьТекстВТекстовыйФайл(Текст, АбсолютныйПуть)
	
	Кодировка = КодировкаТекста.UTF8;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(АбсолютныйПуть, Кодировка);           
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст);
	ТекстовыйФайлЗапись.Закрыть();
		
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Процедура СохранитьТаблицуЗначенийВCSV(ТаблицаЗначений, АбсолютныйПуть, Колонки, ПераметрыФорматирования=Неопределено)
	
	Разделитель = ";";
	Текст="";
	Форматирование = Новый Структура;
	
	// Заголовок
	Для Каждого КолонкаИмя Из Колонки Цикл
		Текст=Текст + КолонкаИмя + Разделитель;
		Если ПераметрыФорматирования<>Неопределено
			И ПераметрыФорматирования.Свойство(КолонкаИмя)=Истина Тогда
			Форматирование.Вставить(КолонкаИмя, ПераметрыФорматирования[КолонкаИмя]);
		Иначе
			Форматирование.Вставить(КолонкаИмя, "");
		КонецЕсли;
	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст)-1)+Символы.ПС;
	
	// Содержание
	Для Каждого Строка Из ТаблицаЗначений Цикл
		Для Каждого КолонкаИмя Из Колонки Цикл
			Текст=Текст + Формат(Строка[КолонкаИмя],Форматирование[КолонкаИмя]) + Разделитель;
		КонецЦикла;
		Текст = Лев(Текст, СтрДлина(Текст)-1)+Символы.ПС;
	КонецЦикла;
	
	// Запись
	Кодировка = КодировкаТекста.UTF8;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(АбсолютныйПуть,Кодировка);           
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст);
	ТекстовыйФайлЗапись.Закрыть();
	
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Функция СохранитьСкриптPythonНаСервере(ИмяФункции)
	
	// Сохранение скрипта в файл
	МакетСкрипта = ПолучитьМакетСкрипта(СтрШаблон("Скрипт_%1", ИмяФункции));
	АбсолютныйПуть = КаталогВременныхФайлов() + СтрШаблон("%1.py", ИмяФункции);
	МакетСкрипта.Записать(АбсолютныйПуть);
	
	Возврат АбсолютныйПуть;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start
Функция ПолучитьМакетСкрипта(ИмяМакета)
	
	Возврат ЭтотОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start									
Функция ЕстьТаблицаВ(ИмяТаблицы, Параметры)
	
	РезультатВыполненияЗапроса = Ложь;
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		РезультатВыполненияЗапроса = ЕстьТаблицаВClickHouseDB(ИмяТаблицы, Параметры);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		РезультатВыполненияЗапроса = ЕстьТаблицаВPostgreSQL(ИмяТаблицы, Параметры);
	Иначе
		РезультатВыполненияЗапроса = Ложь;
	КонецЕсли;
	Возврат РезультатВыполненияЗапроса;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 start									
Функция ЕстьТаблицаВClickHouseDB(ИмяТаблицы, Параметры)
	ТекстЗапроса = "SELECT * FROM " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит + " LIMIT 1;";
	//
	ТекстОтвета = ВыполнитьЗапросGET_ClickHouseDB(ТекстЗапроса, Параметры);
	Если ТекстОтвета = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ЭтоОшибкаЗапросаClickHouseDB(ТекстОтвета) Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ТекстОтвета <> "" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start									
Функция ЕстьТаблицаВPostgreSQL(ИмяТаблицы, Параметры)
	ТекстЗапроса = "SELECT * FROM " + Параметры.ИмяТаблицыТранслит + " LIMIT 1;";
	//
	ТекстОтвета = ВыполнитьЗапросGET_PostgreSQL(ТекстЗапроса, Параметры, "get");
	КодРасшифровкиОтвета = ЭтоОшибкаЗапросаPostgreSQL(ТекстОтвета);
	Если КодРасшифровкиОтвета >= 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start									
Функция ОписаниеТаблицыВ(ИмяТаблицы, Параметры)
	
	Если Параметры.ТипБазы = "ClickHouseDB" Тогда
		Возврат ОписаниеТаблицыВClickHouseDB(ИмяТаблицы, Параметры);
	ИначеЕсли Параметры.ТипБазы = "PostgreSQL" Тогда
		Возврат ОписаниеТаблицыВPostgreSQL(ИмяТаблицы, Параметры)
	Иначе
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-03-2025 18:30 start
Функция ПолучитьСтруктуруТЗДляОписаниеТаблицы()
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("Тип", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("ИмяСКД", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("ИндексСКД", Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("ЕстьРазница", Новый ОписаниеТипов("Булево"));
	ТЗ.Колонки.Добавить("СозданиеПоля", Новый ОписаниеТипов("Строка"));
	
	Возврат ТЗ;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 start									
Функция ОписаниеТаблицыВClickHouseDB(ИмяТаблицы, Параметры)
	ТекстЗапроса = "DESCRIBE TABLE " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит;
	//
	ТекстОтвета = ВыполнитьЗапросGET_ClickHouseDB(ТекстЗапроса, Параметры);
	МассивСтрок = СтрРазделитьРасширенная(ТекстОтвета, Символы.ПС);
	ТЗ = ПолучитьСтруктуруТЗДляОписаниеТаблицы();
	Для каждого СтрокаМ из МассивСтрок Цикл
		Если СтрДлина(СтрокаМ) > 0 Тогда
			СтрокаТЗ = ТЗ.Добавить();
			РазделеннаяМ = СтрРазделитьРасширенная(СтрокаМ, Символы.Таб);
			СтрокаТЗ.Имя = РазделеннаяМ[0];
			СтрокаТЗ.Тип = РазделеннаяМ[1];
			СтрокаТЗ.ИмяСКД = "";
			СтрокаТЗ.ИндексСКД = -1;
		КонецЕсли;
	КонецЦикла;
	Возврат ТЗ;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 14-03-2024 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 start									
Функция ОписаниеТаблицыВPostgreSQL(ИмяТаблицы, Параметры)
	//ТекстЗапроса = "DESCRIBE TABLE " + Параметры.ИмяБазы +"." + Параметры.ИмяТаблицыТранслит;
	ТекстЗапроса = "SELECT * FROM information_schema.columns WHERE table_schema = 'public' AND table_name = '" + Параметры.ИмяТаблицыТранслит + "'";
	//
	ТЗ = ПолучитьСтруктуруТЗДляОписаниеТаблицы();
	//
	ТекстОтвета = ВыполнитьЗапросGET_PostgreSQL(ТекстЗапроса, Параметры, "get");
	КодРасшифровкиОтвета = ЭтоОшибкаЗапросаPostgreSQL(ТекстОтвета);
	Если КодРасшифровкиОтвета < 0 Тогда
		Возврат ТЗ;
	КонецЕсли;
	Если ТекстОтвета <> "" Тогда
		Возврат ТЗ;
	Иначе
		Возврат ТЗ;
	КонецЕсли;
	МассивСтрок = СтрРазделитьРасширенная(ТекстОтвета, Символы.ПС);
	Для каждого СтрокаМ из МассивСтрок Цикл
		Если СтрДлина(СтрокаМ) > 0 Тогда
			СтрокаТЗ = ТЗ.Добавить();
			РазделеннаяМ = СтрРазделитьРасширенная(СтрокаМ, Символы.Таб);
			СтрокаТЗ.Имя = РазделеннаяМ[0];
			СтрокаТЗ.Тип = РазделеннаяМ[1];
			СтрокаТЗ.ИмяСКД = "";
			СтрокаТЗ.ИндексСКД = -1;
		КонецЕсли;
	КонецЦикла;
	Возврат ТЗ;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 26-03-2025 18:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										
Функция ЭтоОшибкаЗапросаClickHouseDB(ТекстОтвета)
	Если СтрНайти(ВРег(ТекстОтвета), "CODE: 32") Тогда
		Возврат Истина;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), "CODE: 57") Тогда
		Возврат Истина;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), "CODE: 62") Тогда
		Возврат Истина; 
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), "CODE: 60") Тогда
		Возврат Истина;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), "CODE: 36") Тогда
		Возврат Истина;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), "CODE:") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	Возврат Ложь;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start										
Функция ЭтоОшибкаЗапросаPostgreSQL(ТекстОтвета)
	Если ТекстОтвета = Неопределено Тогда
		Возврат -100;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), ВРег("does not exist")) Тогда
		Возврат -1;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), ВРег("duplicate key value")) Тогда
		Возврат -2;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), ВРег("ERROR")) Тогда
		Возврат -3;
	ИначеЕсли СтрНайти(ВРег(ТекстОтвета), ВРег("OK")) Тогда
		Возврат 0;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end																				  

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 start																					   
Функция Транслит(Строка) 
    
   Рез = СокрЛП(Строка);   
   Рез = СтрЗаменить(Рез,"а","a"); 
   Рез = СтрЗаменить(Рез,"б","b"); 
   Рез = СтрЗаменить(Рез,"в","v"); 
   Рез = СтрЗаменить(Рез,"г","g"); 
   Рез = СтрЗаменить(Рез,"д","d"); 
   Рез = СтрЗаменить(Рез,"е","e"); 
   Рез = СтрЗаменить(Рез,"ё","e"); 
   Рез = СтрЗаменить(Рез,"ж","zh"); 
   Рез = СтрЗаменить(Рез,"з","z"); 
   Рез = СтрЗаменить(Рез,"и","i"); 
   Рез = СтрЗаменить(Рез,"к","k"); 
   Рез = СтрЗаменить(Рез,"л","l"); 
   Рез = СтрЗаменить(Рез,"м","m"); 
   Рез = СтрЗаменить(Рез,"н","n"); 
   Рез = СтрЗаменить(Рез,"о","o"); 
   Рез = СтрЗаменить(Рез,"п","p"); 
   Рез = СтрЗаменить(Рез,"р","r"); 
   Рез = СтрЗаменить(Рез,"с","s"); 
   Рез = СтрЗаменить(Рез,"т","t"); 
   Рез = СтрЗаменить(Рез,"у","u"); 
   Рез = СтрЗаменить(Рез,"ф","f"); 
   Рез = СтрЗаменить(Рез,"х","h"); 
   Рез = СтрЗаменить(Рез,"ч","ch"); 
   Рез = СтрЗаменить(Рез,"ш","sh"); 
   Рез = СтрЗаменить(Рез,"щ","sch"); 
   Рез = СтрЗаменить(Рез,"ъ",""); 
   Рез = СтрЗаменить(Рез,"ь",""); 
   Рез = СтрЗаменить(Рез,"э","e"); 
   Рез = СтрЗаменить(Рез,"ю","yu"); 
   Рез = СтрЗаменить(Рез,"й","i"); 
   Рез = СтрЗаменить(Рез,"ц","c"); 
   Рез = СтрЗаменить(Рез,"я","ya"); 
   Рез = СтрЗаменить(Рез,"ы","i"); 
   Рез = СтрЗаменить(Рез,"А","A"); 
   Рез = СтрЗаменить(Рез,"Б","B"); 
   Рез = СтрЗаменить(Рез,"В","V"); 
   Рез = СтрЗаменить(Рез,"Г","G"); 
   Рез = СтрЗаменить(Рез,"Д","D"); 
   Рез = СтрЗаменить(Рез,"Е","E"); 
   Рез = СтрЗаменить(Рез,"Ё","E"); 
   Рез = СтрЗаменить(Рез,"Ж","ZH"); 
   Рез = СтрЗаменить(Рез,"З","Z"); 
   Рез = СтрЗаменить(Рез,"И","I"); 
   Рез = СтрЗаменить(Рез,"К","K"); 
   Рез = СтрЗаменить(Рез,"Л","L"); 
   Рез = СтрЗаменить(Рез,"М","M"); 
   Рез = СтрЗаменить(Рез,"Н","N"); 
   Рез = СтрЗаменить(Рез,"О","O"); 
   Рез = СтрЗаменить(Рез,"П","P"); 
   Рез = СтрЗаменить(Рез,"Р","R"); 
   Рез = СтрЗаменить(Рез,"С","S"); 
   Рез = СтрЗаменить(Рез,"Т","T"); 
   Рез = СтрЗаменить(Рез,"У","U"); 
   Рез = СтрЗаменить(Рез,"Ф","F"); 
   Рез = СтрЗаменить(Рез,"Х","H"); 
   Рез = СтрЗаменить(Рез,"Ч","CH"); 
   Рез = СтрЗаменить(Рез,"Ш","SH"); 
   Рез = СтрЗаменить(Рез,"Щ","SCH"); 
   Рез = СтрЗаменить(Рез,"Ъ",""); 
   Рез = СтрЗаменить(Рез,"Ь",""); 
   Рез = СтрЗаменить(Рез,"Ы","I"); 
   Рез = СтрЗаменить(Рез,"Ц","C"); 
   Рез = СтрЗаменить(Рез,"Э","E"); 
   Рез = СтрЗаменить(Рез,"Ю","YU"); 
   Рез = СтрЗаменить(Рез,"Я","YA"); 
   Рез = СтрЗаменить(Рез,"Й","I");
   
   Рез = СтрЗаменить(Рез," ","-"); 
   Рез = СтрЗаменить(Рез,"--","-"); 
   Рез = СтрЗаменить(Рез,"--","-"); 
   Рез = СтрЗаменить(Рез,"--","-"); 
   Рез = СтрЗаменить(Рез,"#",""); 
   Рез = СтрЗаменить(Рез,"№",""); 
   Рез = СтрЗаменить(Рез,",",""); 
   Рез = СтрЗаменить(Рез,".",""); 
   Рез = СтрЗаменить(Рез,"/",""); 
   Рез = СтрЗаменить(Рез,"""",""); 
   Рез = СтрЗаменить(Рез,"(",""); 
   Рез = СтрЗаменить(Рез,")",""); 
   
   Возврат(Рез);
  
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 27-10-2023 9:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Функция СохранитьПараметрыОбработки(ПараметрыОбработки, Настройки) Экспорт
	
	Если Не ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		Возврат Ложь;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ПараметрыОбработки.КлючОбъекта, ПараметрыОбработки.КлючНастроек, Настройки,,ПараметрыОбработки.ИмяПользователя);
	УстановитьПривилегированныйРежим(Ложь);
	// ХранилищеОбщихНастроек.Cохранить(ПараметрыОбработки.КлючОбъекта,  ПараметрыОбработки.КлючНастроек, Настройки, , ПараметрыОбработки.ИмяПользователя);
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Функция ПараметрыОбработки(ИмяПользователя = Неопределено) Экспорт
	Результат = Новый Структура();
	Результат.Вставить("КлючОбъекта", ЭтотОбъект.Метаданные().Имя);
	Результат.Вставить("КлючНастроек", "Обработка");
	Если ИмяПользователя <> Неопределено Тогда
		Результат.Вставить("ИмяПользователя", ИмяПользователя);	
	Иначе
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		ИмяПользователя =  Пользователь.Ссылка.Наименование;
		Результат.Вставить("ИмяПользователя", ИмяПользователя);
		Если Не ЗначениеЗаполнено(ЭтотОбъект.ИмяПользователя) Тогда
			Результат.Вставить("ИмяПользователя","Админ");
		Иначе
			Результат.Вставить("ИмяПользователя", ИмяПользователя);	
		КонецЕсли
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Функция ПолучитьСохраненныеДанные(ИмяПользователя = Неопределено) Экспорт
	ПараметрыОбработки = ПараметрыОбработки(ИмяПользователя);
	УстановитьПривилегированныйРежим(Истина);
	РезультатНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ПараметрыОбработки.КлючОбъекта, ПараметрыОбработки.КлючНастроек,,,ПараметрыОбработки.ИмяПользователя);
	УстановитьПривилегированныйРежим(Ложь);
	Если РезультатНастроек = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат РезультатНастроек;
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Процедура ВыполнитьЧтениеСохраненныхДанных(Форма) Экспорт
	РезультатНастроек = ПолучитьСохраненныеДанные();	
	ВыполнитьЗаполнениеОбъекта(Форма, РезультатНастроек);	
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Процедура ВыполнитьЗаполнениеОбъекта(Форма,РезультатНастроек)
	Если РезультатНастроек = неопределено Тогда
		Возврат;
	КонецЕсли;
	Для каждого СамРеквизит из РезультатНастроек Цикл
		Если СамРеквизит.Ключ = "Объект" Тогда
			ВыполнитьЗаполнениеОбъекта(Форма.Объект,СамРеквизит.Значение);
		ИначеЕсли ТипЗнч(СамРеквизит.Значение) = Тип("ТаблицаЗначений") ТОгда
			Форма[СамРеквизит.Ключ].Загрузить(СамРеквизит.Значение);
		ИначеЕсли  ТипЗнч(СамРеквизит.Значение) = Тип("СписокЗначений") ТОгда
		    Форма[СамРеквизит.Ключ].Очистить();
			Для каждого Данные из СамРеквизит.Значение Цикл
				Форма[СамРеквизит.Ключ].Добавить(Данные.Значение, Данные.Представление);
			КонецЦикла;
		ИНаче
			Форма[СамРеквизит.Ключ] = СамРеквизит.Значение;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 start
Функция ПолучитьНастройкиОбработки(НачальныеПараметры = Неопределено) Экспорт
	
	Если НачальныеПараметры = Неопределено Тогда
		Результат = Новый Структура();
	ИНаче
		Результат = НачальныеПараметры;
	КонецЕсли;
	
	СамОбъект = Новый Структура();
	Для каждого Реквизит из ЭтотОбъект.Метаданные().Реквизиты Цикл
 		Если ТипЗнч(ЭтотОбъект[Реквизит.Имя]) <> Тип("ТаблицаЗначений") Тогда
			СамОбъект.Вставить(Реквизит.Имя, ЭтотОбъект[Реквизит.Имя]);
		Иначе
			СамОбъект.Вставить(Реквизит.Имя,ЭтотОбъект[Реквизит.Имя].Выгрузить());
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Реквизит из ЭтотОбъект.Метаданные().ТабличныеЧасти Цикл
		СамОбъект.Вставить(Реквизит.Имя,ЭтотОбъект[Реквизит.Имя].Выгрузить());
	КонецЦикла;       
	Результат.Вставить("Объект", СамОбъект);
	
	Возврат Результат;
	
КонецФункции
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 17-08-2023 19:30 end

Функция ПараметрыВыполненияВФоне(Знач ИдентификаторФормы = Неопределено) Экспорт
	
	Результат = ОбщиеПараметрыВыполненияВФоне();
	ДобавитьПараметрыВыполненияДляВозвратаРезультата(Результат, ИдентификаторФормы);
	Результат.Вставить("ДополнительныйРезультат", Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция ОбщиеПараметрыВыполненияВФоне()
	
	Результат = Новый Структура;
	Результат.Вставить("ОжидатьЗавершение", ?(ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая, 4, 0.8));
	Результат.Вставить("НаименованиеФоновогоЗадания", "");
	Результат.Вставить("КлючФоновогоЗадания", "");
	Результат.Вставить("ЗапуститьНеВФоне", Ложь);
	Результат.Вставить("ЗапуститьВФоне", Ложь);
	Результат.Вставить("БезРасширений", Ложь);
	Результат.Вставить("СРасширениямиБазыДанных", Ложь);
	Результат.Вставить("ПрерватьВыполнениеЕслиОшибка", Ложь);
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьПараметрыВыполненияДляВозвратаРезультата(Параметры, ИдентификаторФормы)
	
	Параметры.Вставить("ИдентификаторФормы", ИдентификаторФормы); 
	Параметры.Вставить("АдресРезультата", Неопределено);
	
КонецПроцедуры

Функция РазложитьСтрокуВМассивПодстрок(Знач Значение, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, 
	СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Если СтрДлина(Разделитель) = 1 
		И ПропускатьПустыеСтроки = Неопределено 
		И СокращатьНепечатаемыеСимволы Тогда 
		
		Результат = СтрРазделить(Значение, Разделитель, Ложь);
		Для Индекс = 0 По Результат.ВГраница() Цикл
			Результат[Индекс] = СокрЛП(Результат[Индекс])
		КонецЦикла;
		Возврат Результат;
		
	КонецЕсли;
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Значение) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = СтрНайти(Значение, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Значение, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Значение = Сред(Значение, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(Значение, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Значение) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Значение));
		Иначе
			Результат.Добавить(Значение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 24-03-2024 19:30 start
Процедура ОтправитьЖурналРегистрацииВClickHouse(Параметры) Экспорт
	УИД = Новый УникальныйИдентификатор;                                                      
	АдресВХ = ПоместитьВоВременноеХранилище(Неопределено, УИД);
	//ОтборЖурналаРегистрации = Новый Структура("ДатаНачала, ДатаОкончания, Метаданные");
	ОтборЖурналаРегистрации = Новый Структура("ДатаНачала, ДатаОкончания");
	    
	ОтборЖурналаРегистрации.ДатаНачала = Параметры.ДатаНачала;
	ОтборЖурналаРегистрации.ДатаОкончания = КонецДня(Параметры.ДатаОкончания);
	//ОтборЖурналаРегистрации.Метаданные = "HTTPСервис.ИмяСервиса";
	    
	
	//ОтборЖурналаРегистрации.Вставить("Уровень");
	//ОтборЖурналаРегистрации.Уровень = УровеньЖурналаРегистрации[УровеньЖурнала];
	
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ОтборЖурналаРегистрации",			ОтборЖурналаРегистрации);
	ПараметрыОтчета.Вставить("КоличествоПоказываемыхСобытий",	1000);    
	ПараметрыОтчета.Вставить("УникальныйИдентификатор",			УИД);
	ПараметрыОтчета.Вставить("МенеджерВладельца",				Обработки.ЖурналРегистрации);
	ПараметрыОтчета.Вставить("ДобавлятьДополнительныеКолонки",	Ложь);
	ПараметрыОтчета.Вставить("Журнал",							"");
	
	ЖурналРегистрации.ПрочитатьСобытияЖурналаРегистрации(ПараметрыОтчета, АдресВХ);
	    
	СтруктураЗаписейЖурнала = ПолучитьИЗВременногоХранилища(АдресВХ);
	    
	СобытияЖурнала = СтруктураЗаписейЖурнала.СобытияЖурнала;
	//
	Параметры.Вставить("ИмяТаблицы", "ЖурналРегистрации");
	Параметры.Вставить("ИмяТаблицыТранслит", Транслит(Параметры.ИмяТаблицы));
	Параметры.Вставить("ИспользоватьПериодВКлюче", Истина);
	//
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИспользоватьПериодВКлюче", Истина);
	ДополнительныеПараметры.Вставить("КоличествоВПортиции", 1000);
	ДополнительныеПараметры.Вставить("ОднимФайлом", Истина);
	ДополнительныеПараметры.Вставить("Периодичность", "День");
	//	
	Запрос = Неопределено;
	Параметры = Параметры;
	ПериодДата = Параметры.ДатаНачала;
	ПоляНабораДанных = СобытияЖурнала.Колонки;
	МассивПолей = ВернутьМассивПорядокПериодИзРезультатаЗапроса(СобытияЖурнала, ДополнительныеПараметры, "Имя");
	//ДополнительныеПараметры = Неопределено;
	ВходнаяТЗ = СобытияЖурнала;
	МассивПолейЗапрос = ВернутьМассивПорядокПериодИзРезультатаЗапроса(СобытияЖурнала, ДополнительныеПараметры, "Имя");
	ИндексацияТЗ = Неопределено;
	ЕстьРазница = Неопределено;
	ПараметрыМакета = Неопределено;
	МассивПолей = ВернутьМассивПорядокПериодИзНабораДанных(СобытияЖурнала.Колонки, ДополнительныеПараметры, "Имя");		  
	МассивПолейКлючейПериод = ВернутьМассивПолейКлючейПериодИзНабораДанных(СобытияЖурнала.Колонки, ДополнительныеПараметры, "Имя");
	//
	Если Не ЕстьТаблицаВ(Параметры.ИмяТаблицы, Параметры) Тогда
		ТекстЗапроса = ТекстЗапросаСозданиеТаблицыПериодСхемаКомпоновкиДанных(Параметры, ПараметрыМакета, ПоляНабораДанных, МассивПолейКлючейПериод, ДополнительныеПараметры, "Имя");
		ТаблицаСоздана = ВыполнитьЗапросPOST(ТекстЗапроса, Параметры);
	КонецЕсли;
	//
	ОписаниеТаблицыБД = ОписаниеТаблицыВ(Параметры.ИмяТаблицы, Параметры);	
	Параметры.Вставить("ОписаниеТаблицыБД", ОписаниеТаблицыБД);
	
	ПараметрыЗапроса = Новый Структура("Запрос, ПараметрыМакета, ПоляНабораДанных, МассивПолей, МассивПолейКлючейПериод, ДополнительныеПараметры", "", ПараметрыМакета, ПоляНабораДанных, МассивПолей, МассивПолейКлючейПериод, ДополнительныеПараметры);
	
	ЗаписатьРезультатЗапросаЭкстракторНаСервере(
		Запрос, 
		Параметры,
		ПараметрыЗапроса,
		ПериодДата, 
		ПоляНабораДанных, 
		МассивПолей, 
		ДополнительныеПараметры, 
		ВходнаяТЗ, 
		МассивПолейЗапрос,
		ИндексацияТЗ,
		ЕстьРазница);
	
	//ОчиститьЖурналРегистрации(ПараметрыОтчета);	
		
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 24-03-2024 19:30 end

//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 25-03-2024 19:30 start
Процедура ВыполнитьЗадание() Экспорт
	ПараметрыСохраненные = ПолучитьСохраненныеДанные("Фоновый").Объект;
	Если ПараметрыСохраненные.КомандыФоновые.Количество() <= 0 Тогда
		ВыполнитьКомандуСервер("Синхронизация1C_ClickHouseНаСервере_ФоноваяПоУмолчанию");
	Иначе
		ВыполнитьКомандуСервер("Синхронизация1C_ClickHouseНаСервере_ФоноваяПоУмолчанию");
		Для каждого СтрокаТЧ из ПараметрыСохраненные.КомандыФоновые Цикл
			ВыполнитьКомандуСервер(СтрокаТЧ.Команда);	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//<<%%>> ilya@kimkarus.ru @kimkarus kimkarus.ru # Ilya Kosarev 25-03-2024 19:30 end

